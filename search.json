[
  {
    "objectID": "CODE_OF_CONDUCT.html",
    "href": "CODE_OF_CONDUCT.html",
    "title": "Contributor Covenant Code of Conduct",
    "section": "",
    "text": "We as members, contributors, and leaders pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, or sexual identity and orientation.\nWe pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community.\n\n\n\nExamples of behavior that contributes to a positive environment for our community include:\n\nDemonstrating empathy and kindness toward other people\nBeing respectful of differing opinions, viewpoints, and experiences\nGiving and gracefully accepting constructive feedback\nAccepting responsibility and apologizing to those affected by our mistakes, and learning from the experience\nFocusing on what is best not just for us as individuals, but for the overall community\n\nExamples of unacceptable behavior include:\n\nThe use of sexualized language or imagery, and sexual attention or advances of any kind\nTrolling, insulting or derogatory comments, and personal or political attacks\nPublic or private harassment\nPublishing others’ private information, such as a physical or email address, without their explicit permission\nOther conduct which could reasonably be considered inappropriate in a professional setting\n\n\n\n\nCommunity leaders are responsible for clarifying and enforcing our standards of acceptable behavior and will take appropriate and fair corrective action in response to any behavior that they deem inappropriate, threatening, offensive, or harmful.\nCommunity leaders have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, and will communicate reasons for moderation decisions when appropriate.\n\n\n\nThis Code of Conduct applies within all community spaces (encompassing this site and our GitHub repository). It also applies when an individual is officially representing the community in public spaces. Examples of representing our community include using an official e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event.\nNote that unless prior permission is agreed in writing with the RSS, only the lead authors (Andreas Krause, Nicola Rennie, and Brian Tarran) may officially represent the community. Comment to the media must only be given by appointed representatives and must be approved by the RSS press office.\n\n\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported to the community leaders responsible for enforcement at b.tarran@rss.org.uk. All complaints will be reviewed and investigated promptly and fairly.\nAll community leaders are obligated to respect the privacy and security of the reporter of any incident.\n\n\n\nCommunity leaders will follow these Community Impact Guidelines in determining the consequences for any action they deem in violation of this Code of Conduct:\n\n\nCommunity Impact: Use of inappropriate language or other behavior deemed unprofessional or unwelcome in the community.\nConsequence: A private, written warning from community leaders, providing clarity around the nature of the violation and an explanation of why the behavior was inappropriate. A public apology may be requested.\n\n\n\nCommunity Impact: A violation through a single incident or series of actions.\nConsequence: A warning with consequences for continued behavior. No interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, for a specified period of time. This includes avoiding interactions in community spaces as well as external channels like social media. Violating these terms may lead to a temporary or permanent ban.\n\n\n\nCommunity Impact: A serious violation of community standards, including sustained inappropriate behavior.\nConsequence: A temporary ban from any sort of interaction or public communication with the community for a specified period of time. No public or private interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, is allowed during this period. Violating these terms may lead to a permanent ban.\n\n\n\nCommunity Impact: Demonstrating a pattern of violation of community standards, including sustained inappropriate behavior, harassment of an individual, or aggression toward or disparagement of classes of individuals.\nConsequence: A permanent ban from any sort of public interaction within the community.\n\n\n\n\nThis Code of Conduct is adapted from the Contributor Covenant, version 2.1, available at https://www.contributor-covenant.org/version/2/1/code_of_conduct.html.\nCommunity Impact Guidelines were inspired by Mozilla’s code of conduct enforcement ladder.\nFor answers to common questions about this code of conduct, see the FAQ at https://www.contributor-covenant.org/faq. Translations are available at https://www.contributor-covenant.org/translations."
  },
  {
    "objectID": "CODE_OF_CONDUCT.html#our-pledge",
    "href": "CODE_OF_CONDUCT.html#our-pledge",
    "title": "Contributor Covenant Code of Conduct",
    "section": "",
    "text": "We as members, contributors, and leaders pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, or sexual identity and orientation.\nWe pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community."
  },
  {
    "objectID": "CODE_OF_CONDUCT.html#our-standards",
    "href": "CODE_OF_CONDUCT.html#our-standards",
    "title": "Contributor Covenant Code of Conduct",
    "section": "",
    "text": "Examples of behavior that contributes to a positive environment for our community include:\n\nDemonstrating empathy and kindness toward other people\nBeing respectful of differing opinions, viewpoints, and experiences\nGiving and gracefully accepting constructive feedback\nAccepting responsibility and apologizing to those affected by our mistakes, and learning from the experience\nFocusing on what is best not just for us as individuals, but for the overall community\n\nExamples of unacceptable behavior include:\n\nThe use of sexualized language or imagery, and sexual attention or advances of any kind\nTrolling, insulting or derogatory comments, and personal or political attacks\nPublic or private harassment\nPublishing others’ private information, such as a physical or email address, without their explicit permission\nOther conduct which could reasonably be considered inappropriate in a professional setting"
  },
  {
    "objectID": "CODE_OF_CONDUCT.html#enforcement-responsibilities",
    "href": "CODE_OF_CONDUCT.html#enforcement-responsibilities",
    "title": "Contributor Covenant Code of Conduct",
    "section": "",
    "text": "Community leaders are responsible for clarifying and enforcing our standards of acceptable behavior and will take appropriate and fair corrective action in response to any behavior that they deem inappropriate, threatening, offensive, or harmful.\nCommunity leaders have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, and will communicate reasons for moderation decisions when appropriate."
  },
  {
    "objectID": "CODE_OF_CONDUCT.html#scope",
    "href": "CODE_OF_CONDUCT.html#scope",
    "title": "Contributor Covenant Code of Conduct",
    "section": "",
    "text": "This Code of Conduct applies within all community spaces (encompassing this site and our GitHub repository). It also applies when an individual is officially representing the community in public spaces. Examples of representing our community include using an official e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event.\nNote that unless prior permission is agreed in writing with the RSS, only the lead authors (Andreas Krause, Nicola Rennie, and Brian Tarran) may officially represent the community. Comment to the media must only be given by appointed representatives and must be approved by the RSS press office."
  },
  {
    "objectID": "CODE_OF_CONDUCT.html#enforcement",
    "href": "CODE_OF_CONDUCT.html#enforcement",
    "title": "Contributor Covenant Code of Conduct",
    "section": "",
    "text": "Instances of abusive, harassing, or otherwise unacceptable behavior may be reported to the community leaders responsible for enforcement at b.tarran@rss.org.uk. All complaints will be reviewed and investigated promptly and fairly.\nAll community leaders are obligated to respect the privacy and security of the reporter of any incident."
  },
  {
    "objectID": "CODE_OF_CONDUCT.html#enforcement-guidelines",
    "href": "CODE_OF_CONDUCT.html#enforcement-guidelines",
    "title": "Contributor Covenant Code of Conduct",
    "section": "",
    "text": "Community leaders will follow these Community Impact Guidelines in determining the consequences for any action they deem in violation of this Code of Conduct:\n\n\nCommunity Impact: Use of inappropriate language or other behavior deemed unprofessional or unwelcome in the community.\nConsequence: A private, written warning from community leaders, providing clarity around the nature of the violation and an explanation of why the behavior was inappropriate. A public apology may be requested.\n\n\n\nCommunity Impact: A violation through a single incident or series of actions.\nConsequence: A warning with consequences for continued behavior. No interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, for a specified period of time. This includes avoiding interactions in community spaces as well as external channels like social media. Violating these terms may lead to a temporary or permanent ban.\n\n\n\nCommunity Impact: A serious violation of community standards, including sustained inappropriate behavior.\nConsequence: A temporary ban from any sort of interaction or public communication with the community for a specified period of time. No public or private interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, is allowed during this period. Violating these terms may lead to a permanent ban.\n\n\n\nCommunity Impact: Demonstrating a pattern of violation of community standards, including sustained inappropriate behavior, harassment of an individual, or aggression toward or disparagement of classes of individuals.\nConsequence: A permanent ban from any sort of public interaction within the community."
  },
  {
    "objectID": "CODE_OF_CONDUCT.html#attribution",
    "href": "CODE_OF_CONDUCT.html#attribution",
    "title": "Contributor Covenant Code of Conduct",
    "section": "",
    "text": "This Code of Conduct is adapted from the Contributor Covenant, version 2.1, available at https://www.contributor-covenant.org/version/2/1/code_of_conduct.html.\nCommunity Impact Guidelines were inspired by Mozilla’s code of conduct enforcement ladder.\nFor answers to common questions about this code of conduct, see the FAQ at https://www.contributor-covenant.org/faq. Translations are available at https://www.contributor-covenant.org/translations."
  },
  {
    "objectID": "LICENCE.html",
    "href": "LICENCE.html",
    "title": "Licence",
    "section": "",
    "text": "Licence\nContent created by the lead authors (Andreas Krause, Nicola Rennie, and Brian Tarran) and published in this website and repository is licensed under a Creative Commons Attribution 4.0 (CC BY 4.0) International licence, meaning it can be used and adapted for any purpose, provided attribution is given to the original authors. By contributing to this guide, contributors agree to licence their own work under the same terms."
  },
  {
    "objectID": "docs/why-visualise.html",
    "href": "docs/why-visualise.html",
    "title": "Why we visualise data",
    "section": "",
    "text": "Data visualisations can be a very efficient means of identifying patterns in data and conveying a message. The scientific aim of any visualisation is to allow the reader to understand data and extract information:\n\nintuitively;\nefficiently; and\naccurately. \n\nIt is important, when creating a visualisation, to consider the background of the reader or intended audience (Krause 2013). Interpretation is in the eye of the beholder, and a visualisation will only succeed at conveying its message if designed with its audience in mind.\nA successful data visualisation will:\n\n\nGrab attention\n\nIn a sea of text, a visualisation will stand out. If a reader is short on time or uncertain about whether a document is of interest, an attention-grabbing visualisation may entice them to start reading.\n\n\n\nImprove access to information\n\nTextual descriptions can be lengthy and hard to read, while skilfully created visualisations permit the extraction of key information more efficiently, making information extraction a fun task.\n\n\n\nIncrease precision\n\nTextual descriptions are frequently less precise than a visual depiction showing data points and corresponding axes, while a text with too many precise numbers can make it hard to follow a line of argument.\n\n\n\nBolster credibility\n\nWhile a textual summary provides a story, a visualisation of the data can add credibility to otherwise unsubstantiated claims: readers can see the numbers for themselves and arrive at the (same?) conclusions.\n\n\n\nSummarise content\n\nVisual displays allow for summarising complex textual content, aiding the reader in memorising key points.\n\n\n\nFor these reasons, data visualisations are key elements in almost any kind of publication – scientific papers, media reports, conference presentations, social media posts, video summaries, etc.\nTables, too, are a way to visualise data or statistics, and can be similarly important components of a publication. A table may in some cases visualise data better than a graphic. For example, five numbers are probably better displayed in a table than in a complex pie chart that uses colours, angles, and possibly shading and more than two dimensions."
  },
  {
    "objectID": "docs/why-visualise.html#motivation",
    "href": "docs/why-visualise.html#motivation",
    "title": "Why we visualise data",
    "section": "",
    "text": "Data visualisations can be a very efficient means of identifying patterns in data and conveying a message. The scientific aim of any visualisation is to allow the reader to understand data and extract information:\n\nintuitively;\nefficiently; and\naccurately. \n\nIt is important, when creating a visualisation, to consider the background of the reader or intended audience (Krause 2013). Interpretation is in the eye of the beholder, and a visualisation will only succeed at conveying its message if designed with its audience in mind.\nA successful data visualisation will:\n\n\nGrab attention\n\nIn a sea of text, a visualisation will stand out. If a reader is short on time or uncertain about whether a document is of interest, an attention-grabbing visualisation may entice them to start reading.\n\n\n\nImprove access to information\n\nTextual descriptions can be lengthy and hard to read, while skilfully created visualisations permit the extraction of key information more efficiently, making information extraction a fun task.\n\n\n\nIncrease precision\n\nTextual descriptions are frequently less precise than a visual depiction showing data points and corresponding axes, while a text with too many precise numbers can make it hard to follow a line of argument.\n\n\n\nBolster credibility\n\nWhile a textual summary provides a story, a visualisation of the data can add credibility to otherwise unsubstantiated claims: readers can see the numbers for themselves and arrive at the (same?) conclusions.\n\n\n\nSummarise content\n\nVisual displays allow for summarising complex textual content, aiding the reader in memorising key points.\n\n\n\nFor these reasons, data visualisations are key elements in almost any kind of publication – scientific papers, media reports, conference presentations, social media posts, video summaries, etc.\nTables, too, are a way to visualise data or statistics, and can be similarly important components of a publication. A table may in some cases visualise data better than a graphic. For example, five numbers are probably better displayed in a table than in a complex pie chart that uses colours, angles, and possibly shading and more than two dimensions."
  },
  {
    "objectID": "docs/why-visualise.html#a-brief-history-of-data-visualisation",
    "href": "docs/why-visualise.html#a-brief-history-of-data-visualisation",
    "title": "Why we visualise data",
    "section": "A brief history of data visualisation",
    "text": "A brief history of data visualisation\nData visualisation has been, for a long time, both a topic of scientific research and an evolving art form with a variety of high-impact applications.\nIn 1859, Florence Nightingale, the founder of modern nursing, published her findings on the sanitary status of the British army during the war with Russia. She showed raw data as well as summary statistics in tables and charts (Nightingale, 1859). One chart in particular continues to be celebrated today: a polar area chart on the “causes of mortality in the army in the East”.\n\n\n\nFlorence Nightingale's polar area chart, “Diagram of the causes of mortality in the army in the East”. Source: Wikimedia Commons.\n\n\nWhat made Nightingale’s graphs “particularly iconic was their powerful use of visual rhetoric to make an argument about data” (Hedley 2020). This quality is also evident in other visualisations produced by Nightingale’s contemporaries.\nA simplistic but rather impactful visualisation of the water pumps in London associated with transmission of cholera paved the way for root cause identification. Medical doctor John Snow collected data on cholera deaths and created a visualisation where the number of deaths was represented by the height of a bar at the corresponding address in London. This visualisation showed that the deaths clustered around Broad Street, which helped identify the cause of the cholera transmission, the Broad Street water pump (Snow 1854; Wikipedia contributors 2023).\n\n\n\nMap by John Snow showing clusters of cholera cases in the London epidemic of 1854. Source: Wikimedia Commons.\n\n\nAn early complex visualisation was created by Minard in 1861, depicting data from Napoleon’s march on Moscow in 1812/13 and his subsequent retreat.\n\n\n\nCharles Minard's 1869 map of “the successive losses in men of the French Army in the Russian campaign 1812–1813”. Source: Wikimedia Commons.\n\n\nThe map shows latitude and longitude of the army as it moved. The line shows the direction of movement, and the line width represents the size of the army (the surviving soldiers). Particular locations were marked by the date of the army presence, and the temperature is shown, too. Six variables were elegantly woven into a single display (Tufte 2001; Corbett 2001; Robinson 1967).\nThe Paris Exposition in 1900 featured W. E. B. Du Bois exhibiting graphs, charts, and maps of how Black Americans were living (Du Bois 1900; Battle-Baptiste and Rusert 2018).\n\n\n\nA series of statistical charts illustrating the condition of the descendants of former African slaves now in residence in the United States of America. Drawing, ca. 1900. //hdl.loc.gov/loc.pnp/ppmsca.33899. Source: Library of Congress.\n\n\nGroundbreaking work in modern visualisation was provided by Tukey with his book Exploratory Data Analysis (Tukey 1977), and Edward Tufte (Tufte 1990, 2004, 2006).\nThe historical development of visualisations is provided in various publications by Michael Friendly (Friendly and Denis 2005; Friendly 2018, 2022).\nData were visualised by hand until computers came along. The first monitors and printers worked in text mode only, with a resolution of 25 rows and 80 columns or similar, which did not permit much detail or precision. Graphics terminals and dot matrix printers followed, and resolutions kept increasing with the development of laser printers.\nStatistical systems such as SAS enabled creation of data visualisations early on (“Documentation” n.d.).\nArguably the most consistent implementation of a graphics system was realised with ggplot (Wickham 2011, 2016) based on Wilkinson’s The Grammar of Graphics (Wilkinson 2005).\nA key component of ggplot2 is the feature of creating conditional displays. These allow for subsetting the data by the values of one or more variables. The concept was introduced by Cleveland (Cleveland 1993, 1994), showcasing a widely known barley data set that was analysed in textbooks for decades until a visualisation strongly suggested an error in the data set – two years of crop yield of one variety at one of six farms were accidentally swapped. It took a visualisation to reveal what numerous numerical analyses had missed!\nCleveland named the display type “trellis”, being inspired by a trellis in his garden (Cleveland 1993). The trellis concept was first implemented in S (Becker and Chambers 1984) and S-PLUS (Becker and Cleveland 1996). When R (R Core Team 2021) was developed by Robert Gentleman and Ross Ihaka in Auckland NZ in the 1980s, a package named lattice was developed (Sarkar 2008) since “trellis” carried a trademark (by Lucent and later MathSoft). With the advent of ggplot, the term faceting (with functions facet_grid and facet_wrap) replaced the “lattice” with its “panels”."
  },
  {
    "objectID": "docs/index.html",
    "href": "docs/index.html",
    "title": "The guide",
    "section": "",
    "text": "This guide is under development, and the authors welcome feedback and contributions. See the README file in our GitHub repository for information on how to contribute.\n\n\n\n\n\nWhy we visualise data\n\nMotivation\nA brief history of data visualisation\n\n\n\nPrinciples and elements of visualisations\n\nElements of charts, including:\n\nLayout\nAspect ratio\nLines, points and symbols\n\nElements of tables, including:\n\nLayout\nDigits\nAlignment\n\n\n\n\nChoosing a visualisation type\n\nGoals\nTarget audience\nData types\nData relationships\n\n\n\nStyling charts for accessibility\n\nColours\nAnnotations\nFonts\nAlt Text\n\n\n\nStyling charts for RSS publications\n\nStyling with different tools, including:\n\nR\nPython\nJulia\n\nPublication specifications, including:\n\nPages sizes and column widths\nFont types and sizes\nColours\n\n\n\n\nReferences and resources\n\nPrimary sources\nFurther reading\nAdditional resources"
  },
  {
    "objectID": "docs/references.html",
    "href": "docs/references.html",
    "title": "References and resources",
    "section": "",
    "text": "Battle-Baptiste, W., and B. Rusert. 2018. W.e.b. Du Bois’s Data Portraits: Visualizing Black America: The Color Line at the Turn of the Twentieth Century. The W.E.B. Du Bois Center at the University of Massachusetts.\n\n\nBecker, Richard A., and John M. Chambers. 1984. S: An Interactive Environment for Data Analysis and Graphics. Pacific Grove, CA: Wadsworth & Brooks/Cole.\n\n\nBecker, Richard A., and William S. Cleveland. 1996. S-PLUS Trellis Graphics User’s Manual. Seattle, WA: MathSoft.\n\n\nBeecham, Roger, Jason Dykes, Layik Hama, and Nik Lomax. 2021. “On the Use of ‘Glyphmaps’ for Analysing the Scale and Temporal Spread of COVID-19 Reported Cases.” ISPRS International Journal of Geo-Information 10 (4). https://doi.org/10.3390/ijgi10040213.\n\n\nCesal, Amy. 2020. “Writing Alt Text for Data Visualization.” Nightingale. 2020. https://medium.com/nightingale/writing-alt-text-for-data-visualization-2a218ef43f81.\n\n\n“Chart Titles and Text.” n.d. Office for National Statistics. Accessed July 10, 2023. https://style.ons.gov.uk/data-visualisation/titles-and-text/annotation-and-footnotes/.\n\n\nCleveland, William S. 1993. Visualizing Data. Summit, NJ: Hobart Press.\n\n\n———. 1994. The Elements of Graphing Data. Summit, NJ: Hobart Press.\n\n\n“Coblis — Color Blindness Simulator.” n.d. Colblindor. Accessed July 10, 2023. https://www.color-blindness.com/coblis-color-blindness-simulator/.\n\n\nCorbett, J. 2001. “Charles Joseph Minard, Mapping Napoleon’s March, 1861.” CSISS Class 2001. 2001. https://escholarship.org/uc/item/4qj8h064.\n\n\nD’Ignazio, C., and L. F. Klein. 2020. Data Feminism. MIT Press. https://mitpress.mit.edu/9780262547185/data-feminism/.\n\n\n“Documentation.” n.d. Statistical Analysis System. Accessed June 19, 2023. https://support.sas.com/en/documentation.html.\n\n\nDu Bois, W. E. B. 1900. The Exhibit of American Negroes. Paris.\n\n\nFew, Stephen. 2004. Show Me the Numbers. Burlingame, CA: Analytics Press.\n\n\nFriendly, M. 2018. “A Very Brief History of Visualization: Visions, Stories and Pictures.” Chicago, IL. 2018. http://datavis.ca/papers/CHF-2x2.pdf.\n\n\n———. 2022. “Remembrances of Things EDA.” 2022. https://www.researchgate.net/publication/361191335_Rememberances_of_Things_EDA.\n\n\nFriendly, M., and D. Denis. 2005. “The Early Origins and Development of the Scatterplot.” J. Hist. Behav. Sci. 41 (2): 103–30. https://doi.org/10.1002/jhbs.20078.\n\n\nGarland, Kevin. 1994. Mr Beck’s Underground Map. Capital Transport.\n\n\nGreen, Nathan. 2023. “Why your data viz needs alt text.” Significance 20 (1): 38–39. https://doi.org/10.1093/jrssig/qmad011.\n\n\nHedley, Alison. 2020. “Florence Nightingale and Victorian Data Visualisation.” Significance 17 (2): 26–30. https://doi.org/10.1111/1740-9713.01376.\n\n\nKent, AJ. 2021. “When Topology Trumped Topography: Celebrating 90 Years of Beck’s Underground Map.” The Cartographic Journal 58 (1): 1–12. https://doi.org/10.1080/00087041.2021.1953765.\n\n\nKrause, Andreas. 2013. “Concepts and Principles of Clinical Data Graphics.” In A Picture Is Worth a Thousand Tables: Graphics in Life Sciences. Springer.\n\n\nKrause, Andreas, and Michael O’Connell, eds. 2013. A Picture Is Worth a Thousand Tables: Graphics in Life Sciences. Springer.\n\n\nMuth, Lisa. 2018. “An Alternative to Pink & Blue: Colors for Gender Data.” Datawrapper. 2018. https://blog.datawrapper.de/gendercolor/.\n\n\nNightingale, Florence. 1859. “A Contribution to the Sanitary History of the British Army During the Late War with Russia.” London, UK: Harrison; Sons. 1859. https://iiif.lib.harvard.edu/manifests/view/drs:7420433$24b.\n\n\nNorman, Donald A. 1990. The Design of Everyday Things. New York, NY: Currency Doubleday.\n\n\nR Core Team. 2021. R: A Language and Environment for Statistical Computing. Vienna, Austria: R Foundation for Statistical Computing. https://www.R-project.org/.\n\n\nRello, Luz, and Ricardo Baeza-Yates. 2016. “The Effect of Font Type on Screen Readability by People with Dyslexia.” ACM Trans. Access. Comput. 8 (4). https://doi.org/10.1145/2897736.\n\n\nRobbins, Naomi B. 2006. Creating More Effective Graphs. Hoboken, NJ: Wiley.\n\n\nRobinson, A. H. 1967. “The Thematic Maps of Charles Joseph Minard.” Imago Mundi 21: 95–108.\n\n\nSarkar, Deepan. 2008. Lattice: Multivariate Data Visualization with r. New York, NY: Springer.\n\n\nSchwabish, Jonathan. 2021. Better Data Visualizations: A Guide for Scholars, Researchers, and Wonks. Columbia University Press. http://www.jstor.org/stable/10.7312/schw19310.\n\n\nSetlur, V., and B. Cogley. 2022. Functional Aesthetics for Data Visualization. Wiley. https://www.functionalaestheticsbook.com/.\n\n\nSnow, John. 1854. “Mode of Communication of Cholera.” Piccadilly (London), UK: John Churchill. 1854. https://archive.org/details/b28985266/page/52/mode/2up?view=theater.\n\n\n“Styling Base r Graphics.” 2018. Jumping Rivers. 2018. https://www.jumpingrivers.com/blog/styling-base-r-graphics/.\n\n\nTennekes, Martijn, and Marco J. H. Puts. 2023. “cols4all: a Color Palette Analysis Tool.” In EuroVis 2023 - Short Papers, edited by Thomas Hoellt, Wolfgang Aigner, and Bei Wang. The Eurographics Association. https://doi.org/10.2312/evs.20231040.\n\n\nTol, Paul. 2021. “Introduction to Colour Schemes.” 2021. https://personal.sron.nl/~pault/.\n\n\nTufte, Edward R. 1990. Envisioning Information. Graphics Press.\n\n\n———. 2001. The Visual Display of Quantitative Information. 2nd ed. Cheshire, CT: Graphics Press.\n\n\n———. 2004. Visual Explanations: Images and Quantities, Evidence and Narrative. Cheshire, CT: Graphics Press.\n\n\n———. 2006. Beautiful Evidence. Cheshire, CT: Graphics Press.\n\n\nTukey, John W. 1977. Exploratory Data Analysis. Reading, MA: Addison-Wesley.\n\n\nvan Weert, Julia C. M., Monique C. Alblas, Liset van Dijk, and Jesse Jansen. 2021. “Preference for and Understanding of Graphs Presenting Health Risk Information. The Role of Age, Health Literacy, Numeracy and Graph Literacy.” Patient Education and Counseling 104 (1): 109–17. https://doi.org/10.1016/j.pec.2020.06.031.\n\n\nWery, J. J., and J. A. Diliberto. 2017. “The Effect of a Specialized Dyslexia Font, OpenDyslexic, on Reading Rate and Accuracy.” Ann. Of Dyslexia. 67: 114–27. https://doi.org/10.1007/s11881-016-0127-1.\n\n\nWickham, Hadley. 2011. “Ggplot2.” Wiley Interdisciplinary Reviews: Computational Statistics 3: 180–85. https://onlinelibrary.wiley.com/doi/10.1002/wics.147.\n\n\n———. 2016a. Ggplot2: Create Elegant Data Visualisations Using the Grammar of Graphics. Vol. 2. Use r! Springer International Publishing. https://doi.org/10.1007/978-3-319-24277-4.\n\n\n———. 2016b. Ggplot2: Elegant Graphics for Data Analysis. Springer-Verlag New York. https://ggplot2.tidyverse.org.\n\n\nWikipedia contributors. 2023. “1854 Broad Street Cholera Outbreak.” 2023. https://en.wikipedia.org/wiki/1854_Broad_Street_cholera_outbreak.\n\n\nWilkinson, Leland. 2005. The Grammar of Graphics. Statistics and Computing. New York: Springer-Verlag. https://doi.org/10.1007/0-387-28695-0.\n\n\nWilliams, T. A., David R. Anderson, and Dennis J. Sweeney. 2023. “Statistics.” Encyclopedia Britannica. https://www.britannica.com/science/statistics."
  },
  {
    "objectID": "docs/references.html#texts-referenced-in-the-guide",
    "href": "docs/references.html#texts-referenced-in-the-guide",
    "title": "References and resources",
    "section": "",
    "text": "Battle-Baptiste, W., and B. Rusert. 2018. W.e.b. Du Bois’s Data Portraits: Visualizing Black America: The Color Line at the Turn of the Twentieth Century. The W.E.B. Du Bois Center at the University of Massachusetts.\n\n\nBecker, Richard A., and John M. Chambers. 1984. S: An Interactive Environment for Data Analysis and Graphics. Pacific Grove, CA: Wadsworth & Brooks/Cole.\n\n\nBecker, Richard A., and William S. Cleveland. 1996. S-PLUS Trellis Graphics User’s Manual. Seattle, WA: MathSoft.\n\n\nBeecham, Roger, Jason Dykes, Layik Hama, and Nik Lomax. 2021. “On the Use of ‘Glyphmaps’ for Analysing the Scale and Temporal Spread of COVID-19 Reported Cases.” ISPRS International Journal of Geo-Information 10 (4). https://doi.org/10.3390/ijgi10040213.\n\n\nCesal, Amy. 2020. “Writing Alt Text for Data Visualization.” Nightingale. 2020. https://medium.com/nightingale/writing-alt-text-for-data-visualization-2a218ef43f81.\n\n\n“Chart Titles and Text.” n.d. Office for National Statistics. Accessed July 10, 2023. https://style.ons.gov.uk/data-visualisation/titles-and-text/annotation-and-footnotes/.\n\n\nCleveland, William S. 1993. Visualizing Data. Summit, NJ: Hobart Press.\n\n\n———. 1994. The Elements of Graphing Data. Summit, NJ: Hobart Press.\n\n\n“Coblis — Color Blindness Simulator.” n.d. Colblindor. Accessed July 10, 2023. https://www.color-blindness.com/coblis-color-blindness-simulator/.\n\n\nCorbett, J. 2001. “Charles Joseph Minard, Mapping Napoleon’s March, 1861.” CSISS Class 2001. 2001. https://escholarship.org/uc/item/4qj8h064.\n\n\nD’Ignazio, C., and L. F. Klein. 2020. Data Feminism. MIT Press. https://mitpress.mit.edu/9780262547185/data-feminism/.\n\n\n“Documentation.” n.d. Statistical Analysis System. Accessed June 19, 2023. https://support.sas.com/en/documentation.html.\n\n\nDu Bois, W. E. B. 1900. The Exhibit of American Negroes. Paris.\n\n\nFew, Stephen. 2004. Show Me the Numbers. Burlingame, CA: Analytics Press.\n\n\nFriendly, M. 2018. “A Very Brief History of Visualization: Visions, Stories and Pictures.” Chicago, IL. 2018. http://datavis.ca/papers/CHF-2x2.pdf.\n\n\n———. 2022. “Remembrances of Things EDA.” 2022. https://www.researchgate.net/publication/361191335_Rememberances_of_Things_EDA.\n\n\nFriendly, M., and D. Denis. 2005. “The Early Origins and Development of the Scatterplot.” J. Hist. Behav. Sci. 41 (2): 103–30. https://doi.org/10.1002/jhbs.20078.\n\n\nGarland, Kevin. 1994. Mr Beck’s Underground Map. Capital Transport.\n\n\nGreen, Nathan. 2023. “Why your data viz needs alt text.” Significance 20 (1): 38–39. https://doi.org/10.1093/jrssig/qmad011.\n\n\nHedley, Alison. 2020. “Florence Nightingale and Victorian Data Visualisation.” Significance 17 (2): 26–30. https://doi.org/10.1111/1740-9713.01376.\n\n\nKent, AJ. 2021. “When Topology Trumped Topography: Celebrating 90 Years of Beck’s Underground Map.” The Cartographic Journal 58 (1): 1–12. https://doi.org/10.1080/00087041.2021.1953765.\n\n\nKrause, Andreas. 2013. “Concepts and Principles of Clinical Data Graphics.” In A Picture Is Worth a Thousand Tables: Graphics in Life Sciences. Springer.\n\n\nKrause, Andreas, and Michael O’Connell, eds. 2013. A Picture Is Worth a Thousand Tables: Graphics in Life Sciences. Springer.\n\n\nMuth, Lisa. 2018. “An Alternative to Pink & Blue: Colors for Gender Data.” Datawrapper. 2018. https://blog.datawrapper.de/gendercolor/.\n\n\nNightingale, Florence. 1859. “A Contribution to the Sanitary History of the British Army During the Late War with Russia.” London, UK: Harrison; Sons. 1859. https://iiif.lib.harvard.edu/manifests/view/drs:7420433$24b.\n\n\nNorman, Donald A. 1990. The Design of Everyday Things. New York, NY: Currency Doubleday.\n\n\nR Core Team. 2021. R: A Language and Environment for Statistical Computing. Vienna, Austria: R Foundation for Statistical Computing. https://www.R-project.org/.\n\n\nRello, Luz, and Ricardo Baeza-Yates. 2016. “The Effect of Font Type on Screen Readability by People with Dyslexia.” ACM Trans. Access. Comput. 8 (4). https://doi.org/10.1145/2897736.\n\n\nRobbins, Naomi B. 2006. Creating More Effective Graphs. Hoboken, NJ: Wiley.\n\n\nRobinson, A. H. 1967. “The Thematic Maps of Charles Joseph Minard.” Imago Mundi 21: 95–108.\n\n\nSarkar, Deepan. 2008. Lattice: Multivariate Data Visualization with r. New York, NY: Springer.\n\n\nSchwabish, Jonathan. 2021. Better Data Visualizations: A Guide for Scholars, Researchers, and Wonks. Columbia University Press. http://www.jstor.org/stable/10.7312/schw19310.\n\n\nSetlur, V., and B. Cogley. 2022. Functional Aesthetics for Data Visualization. Wiley. https://www.functionalaestheticsbook.com/.\n\n\nSnow, John. 1854. “Mode of Communication of Cholera.” Piccadilly (London), UK: John Churchill. 1854. https://archive.org/details/b28985266/page/52/mode/2up?view=theater.\n\n\n“Styling Base r Graphics.” 2018. Jumping Rivers. 2018. https://www.jumpingrivers.com/blog/styling-base-r-graphics/.\n\n\nTennekes, Martijn, and Marco J. H. Puts. 2023. “cols4all: a Color Palette Analysis Tool.” In EuroVis 2023 - Short Papers, edited by Thomas Hoellt, Wolfgang Aigner, and Bei Wang. The Eurographics Association. https://doi.org/10.2312/evs.20231040.\n\n\nTol, Paul. 2021. “Introduction to Colour Schemes.” 2021. https://personal.sron.nl/~pault/.\n\n\nTufte, Edward R. 1990. Envisioning Information. Graphics Press.\n\n\n———. 2001. The Visual Display of Quantitative Information. 2nd ed. Cheshire, CT: Graphics Press.\n\n\n———. 2004. Visual Explanations: Images and Quantities, Evidence and Narrative. Cheshire, CT: Graphics Press.\n\n\n———. 2006. Beautiful Evidence. Cheshire, CT: Graphics Press.\n\n\nTukey, John W. 1977. Exploratory Data Analysis. Reading, MA: Addison-Wesley.\n\n\nvan Weert, Julia C. M., Monique C. Alblas, Liset van Dijk, and Jesse Jansen. 2021. “Preference for and Understanding of Graphs Presenting Health Risk Information. The Role of Age, Health Literacy, Numeracy and Graph Literacy.” Patient Education and Counseling 104 (1): 109–17. https://doi.org/10.1016/j.pec.2020.06.031.\n\n\nWery, J. J., and J. A. Diliberto. 2017. “The Effect of a Specialized Dyslexia Font, OpenDyslexic, on Reading Rate and Accuracy.” Ann. Of Dyslexia. 67: 114–27. https://doi.org/10.1007/s11881-016-0127-1.\n\n\nWickham, Hadley. 2011. “Ggplot2.” Wiley Interdisciplinary Reviews: Computational Statistics 3: 180–85. https://onlinelibrary.wiley.com/doi/10.1002/wics.147.\n\n\n———. 2016a. Ggplot2: Create Elegant Data Visualisations Using the Grammar of Graphics. Vol. 2. Use r! Springer International Publishing. https://doi.org/10.1007/978-3-319-24277-4.\n\n\n———. 2016b. Ggplot2: Elegant Graphics for Data Analysis. Springer-Verlag New York. https://ggplot2.tidyverse.org.\n\n\nWikipedia contributors. 2023. “1854 Broad Street Cholera Outbreak.” 2023. https://en.wikipedia.org/wiki/1854_Broad_Street_cholera_outbreak.\n\n\nWilkinson, Leland. 2005. The Grammar of Graphics. Statistics and Computing. New York: Springer-Verlag. https://doi.org/10.1007/0-387-28695-0.\n\n\nWilliams, T. A., David R. Anderson, and Dennis J. Sweeney. 2023. “Statistics.” Encyclopedia Britannica. https://www.britannica.com/science/statistics."
  },
  {
    "objectID": "docs/references.html#further-reading",
    "href": "docs/references.html#further-reading",
    "title": "References and resources",
    "section": "Further reading",
    "text": "Further reading\n\nFunctional Aesthetics for Data Visualization.\nSetlur and Cogley (2022)\nWhy we recommend: This book connects research and practice, combining ideas from cognitive psychology, data literacy, and visual design. Its ideas go beyond simple charts, and can be extending to complex visual displays including interactive dashboards and visualisations.\n\n\nBetter Data Visualizations: A Guide for Scholars, Researchers, and Wonks.\nSchwabish (2021)\nWhy we recommend: This book guides you towards which types of data visualisations may best depending on what you’re trying to show. Not only that, but it uses visual perception theory to explain why some charts are easier to read than others.\n\n\nData Feminism.\nD’Ignazio and Klein (2020)\nWhy we recommend: We often hear the term “storytelling” when we’re talking about data visualisation, and we should remember the role of the storyteller in this. In this book, the authors make several critical points, including that when we work with data we must also think about why it was collected, and what it could be used for.\n\n\nPreference for and understanding of graphs presenting health risk information. The role of age, health literacy, numeracy and graph literacy.\nvan Weert et al. (2021)\nWhy we recommend: Patients are often presented with data about health risk information in the form in charts and tables. This article examines how well patients understand the information presented to them across a range of different chart types. It finds that the types of charts that patients prefer, is not always the type of chart that they understand best."
  },
  {
    "objectID": "docs/references.html#additional-resources",
    "href": "docs/references.html#additional-resources",
    "title": "References and resources",
    "section": "Additional resources",
    "text": "Additional resources\n\nTraining courses\n\nPresenting Data (RSS)\nThis online course is the foundation to all presentations of statistical information. The basic principles of presenting information in tables, charts, maps and text are explained. These are illustrated and then reinforced through practical exercises.\n\n\nData Exploration in Tableau (RSS)\nTableau is more than just a simple data visualisation tool. It also gives people the capability to manipulate multiple data sources, create custom charts, build predictive models, and turn their plots into interactive dashboards and presentations.\nThis virtual course will run over two afternoons. It will guide you through the process of wrangling data, performing data analysis, and visually communicating outputs. By the end of this course you will be able to manipulate your own data to build custom charts. You will learn how to work with geographic data in Tableau, use predictive models to make forecasts, and create interactive dashboards and stories to share your work.\n\n\nPower BI for Data Exploration and Basic Statistics (RSS)\nPower BI is rapidly becoming a standard tool for producing interactive reports and dashboards and this course will provide a systematic introduction to Power BI, focusing on the workflow, from data preparation through to building and sharing visuals. There will be a focus on design issues, helping to achieve the right level of functionality and usability based on the intended audience. Particular attention will also be paid to the use of basic statistics.\n\n\nPublishing Quality Charts in R with ggplot2 (RSS)\nThis tutor-led virtual course will introduce how the tidyverse and ggplot2 can be used to reproducibly create publication quality charts from R.\n\n\n\nLow-code/no-code visualisation tools\n\nDatawrapper\nhttps://www.datawrapper.de/\n\n\nFlourish\nhttps://flourish.studio/"
  },
  {
    "objectID": "docs/principles.html",
    "href": "docs/principles.html",
    "title": "Principles and elements of visualisations",
    "section": "",
    "text": "Data visualisations must serve a purpose. By understanding the purpose of a visualisation, we – as author or reader – are in a position to assess whether a visualisation succeeds in its aims or requires improvement!\nArguably the most common purpose of a visualisation is a comparison of groups of data, such as data on patients receiving different treatments. A good choice of axes, axis limits, labels and symbols can facilitate substantially the identification of patterns in the data, whereas poor choices for any of these elements can substantially hamper the extraction of information."
  },
  {
    "objectID": "docs/principles.html#elements-of-charts",
    "href": "docs/principles.html#elements-of-charts",
    "title": "Principles and elements of visualisations",
    "section": "Elements of charts",
    "text": "Elements of charts\nVarious elements of a visualisation can contribute to the efficacy with which information can be distilled. All visualisation software packages will output graphics in a default style, but these will rarely, if ever, be the optimum choices for the data visualisation you are creating. When designing a data visualisation, one needs to consider the range of options available. Some of these options are discussed in what follows.\n\nLayout (panels, facets)\nThe layout (arrangement of multiple panels, facets, or subplots) is highly relevant for efficient comparison. If data on the y-axis are to be compared, a single y-axis with all panels aligned horizontally facilitates comparison, whereas for efficient comparison of x-axis values, panels should be stacked. Matrix layouts (multiple rows and columns in a single figure) should only be used if the data shown in individual panels are not related or space does not permit a single row or a single column (e.g., if there are too many panels to fit on a single row).\nExample: The figure below shows two different layouts of exactly the same data with exactly the same type of visualisation except for the layout. Note how difficult it is to compare the data across panels on the left-hand side, while it is easy with the layout on the right-hand side. The key difference is that the panels on the right share a common y-axis, which is key for comparison of y-values across panels.\n\n\nCode\n# ---\n# Data set creation.\n\nset.seed(93384)\n\ntime &lt;- c(0, 0.5, 1, 2, 4, 8, 12, 16, 24)\nn &lt;- 32 # no of subjects\n\ndata &lt;- expand.grid(ID = 1:n, time = time)\n\nbw &lt;- data.frame(\n  ID = sort(unique(data$ID)),\n  bw = rlnorm(n, log(75), sdlog = 0.25)\n)\n\nbw$bw.category &lt;- cut(bw$bw,\n  breaks = quantile(bw$bw, c(0, 0.33, 0.66, 1)),\n  labels = paste(c(\"low\", \"medium\", \"high\"), \"body weight\"),\n  include.lowest = TRUE\n)\n\ndata &lt;- merge(data, bw)\n\ndata &lt;- data[order(data$ID, data$time), ]\n\n# Simulate drug concentrations as a function of body weight.\ndata$conc &lt;- 100 / (data$bw^1.0) * exp(-0.085 * data$time) *\n  rlnorm(nrow(data), sdlog = 0.25) + # res. error\n  (data$ID - mean(data$ID)) / mean(data$ID) / 4 # r. eff\n\n# ---\n# Visualisation.\nlibrary(ggplot2)\n\ngg &lt;- list()\n\ndata$ID &lt;- factor(data$ID)\n\ngg[[\"3x1\"]] &lt;- ggplot(data, aes(x = time, y = conc, group = ID, color = ID)) +\n  geom_line()\ngg[[\"3x1\"]] &lt;- gg[[\"3x1\"]] + scale_x_continuous(breaks = seq(0, 24, by = 4))\ngg[[\"3x1\"]] &lt;- gg[[\"3x1\"]] + theme_bw() + \n  xlab(\"time [h]\") + \n  ylab(\"drug concentration [ng/mL]\")\ngg[[\"3x1\"]] &lt;- gg[[\"3x1\"]] + facet_grid(bw.category ~ .)\ngg[[\"3x1\"]] &lt;- gg[[\"3x1\"]] + theme(legend.position = \"none\")\n\ngg[[\"1x3\"]] &lt;- gg[[\"3x1\"]] + facet_grid(. ~ bw.category)\n\n# Add space to the rhs of the first figure for better separation in the cowplot.\ngg[[\"3x1\"]] &lt;- gg[[\"3x1\"]] + \n  theme(plot.margin = unit(c(0.5, 4, 0.5, 0.5), \"lines\"))\n\n# Both figures into a single output figure.\nlibrary(cowplot)\nplot_grid(gg[[1]], gg[[2]], rel_widths = c(1.5, 2))\n\n\n\n\n\nLine plots showing how choice of layout determines ease of comparison across panels.\n\n\n\n\nAspect ratio\nOur visual perception of data in a display must not depend on the choice of x- and y-axes. In many cases, a square figure avoids visual bias. A square figure should be considered in particular if the two axes share a communality such as a measurement before and after some event, observed data vs model-predicted values or, more generally, the same units (such as kg or metres). Generally, a 1:1 aspect ratio (the physical length of 1 measurement unit in the x- and the y-direction) is a good default. If the figure has identical ranges for the x- and the y-axis, a 1:1 aspect ratio yields a square figure.\nExample: The three panels below all show the same data, aimed at enabling judgement about the goodness of a model fit (predicted vs observed values). Note the difference in visual perception between a stretched x-axis, a stretched y-axis, and a 1:1 aspect ratio with identical axis limits.\n\n\nCode\n# Observed vs predicted (any data with comparable x and y will do).\n\n# ---\n# Data set.\n# Old Faithful Geyser (Yellowstone) data set with eruption duration\n#   and waiting time to the next eruption (both in minutes).\ndata &lt;- data.frame(\n  x = faithful$eruptions,\n  y = faithful$waiting\n)\n\n# ---\n# Regression model fit.\nfit &lt;- lm(y ~ x, data = data)\n\n# Addition of predicted values to the data set.\ndata$pred &lt;- predict(fit)\n\n# Range of y and y predicted combined.\nr &lt;- range(unlist(data[c(\"y\", \"pred\")]))\n\n# ---\n# Plotting.\n\nlibrary(ggplot2)\n\ngg &lt;- ggplot(data, aes(x = pred, y = y))\n\n# Adding the line of identity, y = x\n# (note: plotting it first will add points on top).\ngg &lt;- gg + geom_abline(intercept = 0, slope = 1, color = \"black\", linewidth = 1)\n\n# Adding points, removing grey background.\ngg &lt;- gg + geom_point() + theme_bw()\n\n# Adding regression fit (local smoother, loess) of y~x.\ngg &lt;- gg + geom_smooth(method = \"loess\", color = \"firebrick\", se = FALSE)\n\n# Adding axis labels.\ngg &lt;- gg + xlab(\"predicted\") + ylab(\"observed\")\n\n# Aspect ratios are commonly not fixed but adapted to figure size.\n#   With dynamic displays, the point of different perception\n#   might not be obvious depending on the figure/screen size.\n#   To make that point independent of figure height and width,\n#     the aspect ratio is fixed in this example.\ngg &lt;- gg + coord_fixed(ratio=0.5)\n\n# Copy the figure and fix the aspect ratio to 2, i.e., \n#   one pixel in x corresponds to 2 pixels in y.\ngg2 &lt;- gg + coord_fixed(ratio=2)\n\n# Setting the aspect ratio to 1 (1 unit in x and y \n#   corresponds to the same number of pixels) and \n#   setting axis limits to be identical.\ngg3 &lt;- gg + coord_fixed(ratio=1, xlim=r, ylim=r)\n\n# Cow (column-wise) plot, combine all figures into one.\nlibrary(cowplot)\nplot_grid(gg, gg2, gg3, rel_widths = c(4, 2, 3), nrow = 1)\n\n\n\n\n\nScatter plots showing how visual perception of model fit can be influenced by aspect ratio.\n\n\n\n\nLines\nLines introduce an order, a sequence. If there is no order, data should not be interconnected by lines. If different line types indicate different groups that have an inherent order, it is helpful if the chosen line styles have an order, too (example: line thickness, dash density, or darkness of colour increases with values from the lowest to the highest group).\n\n\nPoints\nPoint symbols should be chosen such that the visualisation displays the data in a meaningful way. If thousands of data points are to be shown, open circles or smaller filled symbols are better than overlapping filled symbols. If the data are discrete and observations overlay, consider jittering the data gently for a better visualisation.\n\n\nColours\nColours should serve a purpose such as helping to identify different groups. Colours for pure decoration are discouraged. Tufte pointed out that because “they do have a natural visual hierarchy, varying shades of gray show varying quantities better than color”, and “the shades of gray provide an easily comprehended order to the data measures. This is the key” (Tufte 2001, 154).\n\n\nAxes\n\nOrigins and limits\nAxis ranges should generally start at 0 unless there is a good reason for choosing other ranges. If the data do not contain negative values, the axis should not stretch into negative values and in particular not have tick marks at negative values.\nIf relative changes or ratios are displayed, the corresponding axis should be logarithmic (such that, e.g., 1/4 has the same distance to the reference point, 1, as 4) and symmetric around the point of no change. An auxiliary line at the point of no change can facilitate interpretation. Axis tickmarks and auxiliary grey lines will facilitate reading off values, avoiding wrong linear interpolation by the viewer. Axis tick mark labels should indicate the ratio (e..g, “1/4” instead of 0.25).\nIf the data displayed as x and as y are comparable, axis limits should be identical and the figure square, such that distances are consistent in the x- and in the y-direction.\nExample: The figure below illustrates that the deliberate choice of axis limits (here, y-axis limits) can make a big difference to perception, and therefore interpretation, by the reader. The only difference between the two panels is the y-axis range.\n\n\nCode\nlibrary(ggplot2)\nplot_data &lt;- data.frame(\n  type = factor(\n    c(\"Our product\", \"Competitor\"),\n    levels = c(\"Our product\", \"Competitor\")\n  ),\n  value = c(220, 210)\n)\n\n# Original plot\nggplot(plot_data) +\n  geom_col(\n    mapping = aes(x = type, y = value),\n    fill = \"lightblue\",\n    colour = \"black\"\n  ) +\n  scale_y_continuous(breaks = seq(0, 220, by = 20), expand = c(0, 0)) +\n  labs(x = \"\", y = \"\") +\n  theme_minimal()\n\n# Offset the y axis\noffset &lt;- 208\nggplot(plot_data) +\n  geom_col(\n    mapping = aes(x = type, y = value - offset),\n    fill = \"lightblue\",\n    colour = \"black\"\n  ) +\n  scale_y_continuous(\n    breaks = seq(0, 14, by = 2),\n    labels = seq(0 + offset, 14 + offset, by = 2),\n    expand = c(0, 0)\n  ) +\n  labs(x = \"\", y = \"\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\nBar charts showing how visual impression can be driven by the choice of axis limits.\n\n\n\n\nLinear and logarithmic axes\nExample: Let’s say that you want to know whether some variable, y, changes (compared to a reference or baseline measurement) depending on another variable, x. For example, does blood pressure change with treatment?\nThe figure below shows data with, on average, no change compared to a reference (baseline) measurement (red horizontal line, top two panels) – approximately half the data are below the point of no change, and the other half are above. However, this is not easily apparent from the top-left panel, which uses a linear axis, and so space is allocated asymmetrically in the vertical direction – both up and down – away from the reference line. In the top-right panel, which uses a logarithmic axis, the relatively even spread of the data points around the reference line is clear to see. In the bottom row, the same data are shown in histogram form, again using linear and logarithmic axes.\n\n\nCode\n# Naïve plot of y vs x. If there is no change (on average),\n# half the data are below the line of no change.\n# Asymmetric view, and it depends on y/x or x/y.\n\nset.seed(33838)\nx &lt;- data.frame(\n  x = rlnorm(200, 2, 0.2),\n  y = rlnorm(200, 0.2, 0.75)\n)\n# Add an outlier manually.\nx &lt;- rbind(x, data.frame(x = quantile(x$x, 0.8), y = max(x$y) * 1.5))\n\n# ---\n# Plotting.\n\nlibrary(ggplot2)\n# Scatterplot of y vs x.\ngg &lt;- ggplot(x, aes(x = x, y = y)) +\n  geom_point() +\n  theme_bw()\ngg &lt;- gg + geom_hline(yintercept = 1, color = \"firebrick\", linewidth = 2)\ngg &lt;- gg + xlab(\"x-variable\") + ylab(\"Fold-change\")\ngg\n\n# Logarithmic axes, symmetric range (!):\nxbr &lt;- c(1 / 10, 1 / 5, 1 / 2, 1, 2, 5, 10)\ngg &lt;- gg + scale_y_continuous(\n  breaks = xbr, trans = \"log10\",\n  limits = max(abs(x$y))^c(-1, 1)\n)\ngg\n\n# Second axis:\ngg &lt;- gg + scale_y_continuous(\n  breaks = xbr,\n  labels = paste(100 * xbr, \"%\", sep = \"\"),\n  trans = \"log10\",\n  limits = max(abs(x$y))^c(-1, 1),\n  sec.axis = sec_axis(\n    trans = ~ . * 1, breaks = xbr,\n    labels = ifelse(xbr &lt; 1, paste(\"1/\", 1 / xbr, sep = \"\"), xbr)\n  )\n)\n\n# ---\n# Univariate distribution (histogram).\n\ngg &lt;- ggplot(x, aes(x = y)) +\n  theme_bw() +\n  xlab(\"Fold-change\")\ngg &lt;- gg + geom_histogram(color = \"firebrick\", fill = \"gray\")\ngg\n\n# Symmetric range, log scale.\ngg &lt;- gg + scale_x_continuous(\n  breaks = xbr,\n  labels = ifelse(xbr &lt; 1, paste(\"1/\", 1 / xbr), xbr),\n  trans = \"log10\",\n  limits = max(abs(x$x))^c(-1, 1)\n)\ngg\n\n\n\n\n\n\n\n\nSwitching from linear axes (left) to logarithmic axes (right) helps clarify changes in values relative to some baseline measure.\n\n\n\n\n\nSymbols\nSymbols should be intuitive (for example, “+” for a positive outcome, “–” for a negative outcome, “O” for a neutral outcome). In an ideal case, symbols require only a single look at the legend to subsequently focus on the visualisation. \nSymbols such as triangles, circles, and squares do not have an intuitive connotation. However, if there is an order in the data, it might be reflected in the order of the symbols, e.g., the number of vertices (circle, dash, triangle, square, pentagon, etc.).\n\n\nLegends\nLegends should not attract too much attention and certainly not cover up data. They should be placed in the margins of the figure or can be captured in a small text below the figure. \nIf legend entries refer to single objects (e.g., one line per group), placing the legend next to the corresponding object makes it easier for the reader to map legend entries to display objects.\nExample: The figure below shows that ease of reading can be improved by adding the legend directly into the figure, next to the corresponding data. Note that labels must not overlay and label positions might require adaptation depending on the data.\n\n\nCode\n# ---\n# EU stock markets, year and indices DAX, SMI, CAC, and FTSE.\n\n# Store graphics into a list.\ngg.list &lt;- list()\n\n# Prepare the data set (reformat EuStockMarkets that comes with R).\nx &lt;- EuStockMarkets\ndf &lt;- data.frame(\n  time = as.vector(time(x)),\n  index = rep(colnames(x), rep(nrow(x), ncol(x))),\n  value = as.vector(x),\n  stringsAsFactors = TRUE\n)\ndf$index2 &lt;- df$index # For use with labels later.\n\nlibrary(ggplot2)\n\n# Standard layout and legend.\ngg &lt;- ggplot(df, aes(x = time, y = value, group = index, color = index, label = index2))\ngg &lt;- gg + geom_line() + theme_bw()\n\n# Nicer axis tick mark settings.\nax &lt;- pretty(df$time, n = 10)\ngg &lt;- gg + scale_x_continuous(limits = range(ax), breaks = ax)\ngg &lt;- gg + xlab(\"year\") + ylab(\"Stock index\")\n\ngg.list[[1]] &lt;- gg\n\n# Use the last element of each time series for x,y of the label.\n# Use that the last element is the first element of the reversed order,\n#   and extract the first element per index by using !duplicated.\ny &lt;- df[rev(order(df$time)), ] # descending in time.\ny &lt;- y[!duplicated(y$index), ] # first entry per index\ny$index2 &lt;- y$index # Create a copy that contains formatted strings.\nlevels(y$index2)[levels(y$index2) == \"FTSE\"] &lt;- \"\\n\\nFTSE\"\n# Add a newline to separate FTSE from DAX.\n# Note that the factor level is modified, not the data.\n\n# Drop the legend, move labels into figure.\ngg &lt;- gg + geom_text(data = y, hjust = \"left\", nudge_x = 0.1)\n# aes as before, nudge adds space on the lhs.\ngg &lt;- gg + theme(legend.position = \"none\")\ngg.list[[2]] &lt;- gg\n\n# ---\n# Both figures into a single output figure.\n\nlibrary(cowplot)\nplot_grid(gg.list[[1]], gg.list[[2]], rel_widths = c(2.25, 2))\n\n\n\n\n\nLine plots showing how direct labelling of figure elements can improve ease of reading.\n\n\n\n\nOrientation\nIf there is an order in the data that is to be visualised, e.g., as a barplot, showing the data as horizontal bars and sorting values from top to bottom (highest value to lowest) is more intuitive than showing vertical bars with a left-to-right orientation (Few 2004, 182). One common exception to this is where data are to be ordered according to units of time. Time is often visually interpreted as flowing left to right, from past to present to future.\nIn the case of boxplots, for example, a horizontal orientation allows for a more accurate visual comparison than a vertical orientation, since it is easier for the human eye to follow an imaginary vertical line than an imaginary horizontal line, as can be seen from the figure below. Note, also, that the long x-axis labels are not readable in the panel on the left since they overlap, but they become readable with a horizontal orientation in the panel on the right.\n\n\nCode\n# Store figures into a list.\ngg.list &lt;- list()\n\nlibrary(ggplot2)\n\nx &lt;- mpg # miles per gallon data set.\nx$car &lt;- paste(x$manufacturer, x$model)\n\ngg &lt;- ggplot(x, aes(x = car, y = hwy, group = car))\ngg &lt;- gg + geom_boxplot() + theme_bw() + xlab(\"Miles per gallon (highway)\")\ngg.list[[\"vertical orientation\"]] &lt;- gg\n\ngg.list[[\"horizontal orientation\"]] &lt;- gg + coord_flip()\n\n# ---\n# Both figures into a single output figure.\n\nlibrary(cowplot)\nplot_grid(gg.list[[1]], gg.list[[2]], rel_widths = c(2, 2.5))\n\n\n\n\n\nChanges to orientation can improve both readability of labels and the visual interpretation of data.\n\n\n\n\nAuxiliary elements\nGenerally speaking, when designing a data visualisation, we need to be wary of what Tufte calls “chart junk” – any element of a chart that does not add to or enhance the information on display. Data are, of course, the star of the show, so should receive the most space. Meanwhile, all additional elements (lines, colours, symbols, etc.) should be assessed for their contribution to the interpretation of the data. If there is no contribution, they can be removed. A typical example of a redundant element in a data visualisation is a figure that has 5 panels (sub-figures or facets), each with x- and y-axis. To allow for efficient comparison of the data shown in the different panels, a single y-axis suffices if the panels are all aligned on a single row. This creates more space for the data and synchronises y-axis limits and data positions as a side benefit. \nSome helpful additional elements can include lines at relevant points. Examples include a vertical line at x=0 (e.g., for time 0), a horizontal line at y=0 (e.g., to indicate the point of no change, or a diagonal (at y=x, e.g., to indicate no difference between x and y). Consider whether the auxiliary element is better plotted under or over the data (which generally depends on the sequence of adding graphics elements).\nA local scatterplot smoother (loess, lowess, polynomial) can be particularly helpful to identify relationships with limited model assumptions. The confidence band (pointwise confidence intervals) should only be shown if relevant.\nExample: The figure below displays changes from a starting point (time 0) over time. A plain figure (left panel) requires the reader to read the y-axis labels to identify the point of no change (y=0). The addition of a line (middle panel) indicating the point of no change makes reading easier, and choosing an axis range symmetric around the point of no change (right panel) allocates increases (changes upward) to the upper half of the visualisation and decreases (changes downward) to the lower half, making reading and interpretation more intuitive.\n\n\nCode\n# Function for data set generation.\nmake.data &lt;- function(\n    x = c(0, 0.5, 1, 2, 4, 8, 12, 16, 24),\n    y = exp(-0.2 * x) - exp(-0.21 * x),\n    sd = 0.25, # std dev of y\n    seed = 4384590,\n    n = 50) {\n  # Setting the random number seed for reproducibility.\n  set.seed(seed)\n  # Creation of x- and y-variables.\n  x2 &lt;- rep(x, n)\n  y2 &lt;- NULL\n  for (i in 1:n) {\n    y2 &lt;- c(y2, y * (2 * (n / 4 - i)) + rlnorm(length(y), sd = sd))\n  }\n\n  # Creation of an identifier for each profile.\n  ID &lt;- factor(rep(1:n, rep(length(y), n)))\n\n  # Composition of the data set.\n  df &lt;- data.frame(PD = 100 * y2, time = x, ID = ID)\n\n  # Addition of a baseline variable.\n  BL &lt;- df[df$time == 0, c(\"ID\", \"PD\")]\n  names(BL) &lt;- c(\"ID\", \"BL\")\n  df &lt;- merge(df, BL)\n\n  # Addition of change from baseline.\n  df$Change &lt;- df$PD - df$BL\n\n  # Definition of treatment.\n  df$trt &lt;- ifelse(df$BL &gt; mean(df$BL), \"active\", \" placebo\")\n\n  return(df)\n}\n\n# Generate the data.\nx &lt;- make.data()\n\n# ---\n# Figures.\n\nlibrary(ggplot2)\ngg &lt;- ggplot(x, aes(x = time, y = Change, group = ID, color = ID))\ngg &lt;- gg + theme_bw()\ngg &lt;- gg + xlab(\"Time [h]\") + ylab(\"Change from baseline\")\ngg &lt;- gg + geom_line(linewidth = 1.1) + theme(legend.position = \"none\")\ngg &lt;- gg + facet_grid(. ~ trt)\n\n# Addition of an auxiliary line at y=0.\ngg2 &lt;- gg + geom_hline(yintercept = 0, linewidth = 1.2)\n\n# Symmetric y-axis limits.\ngg3 &lt;- gg2 + ylim(c(-1, 1) * max(abs(x$Change)))\n\n# Arranging all plots into one figure.\nlibrary(cowplot)\nplot_grid(gg, gg2, gg3, nrow = 1)\n\n\n\n\n\nAdding elements, such as lines to indicate the point of no change, can improve readability.\n\n\n\n\nThree-dimensional charts\nThree-dimensional displays of data may look striking, in some respects, but accurate reading and interpretation is not straightforward with such presentations.\nExample: The left panel of the figure below displays a single number, 10, as a 3D bar chart. The correct identification of the value is indicated by the red “X”: the height of the bar must be projected against the rear wall (the axis) from the viewing position. The panel on the right positions bars on a tilted surface, resulting in perceived height differences when there are none: the same four numbers, 10, 20, 30, and 40, are shown in each row and column.\n\n\n\nReading off data values from 3D charts is difficult."
  },
  {
    "objectID": "docs/principles.html#elements-of-tables",
    "href": "docs/principles.html#elements-of-tables",
    "title": "Principles and elements of visualisations",
    "section": "Elements of tables",
    "text": "Elements of tables\nTables can be an efficient means of visualisation, just like graphics – and they also can be misleading or cumbersome to read if not properly presented. Tables should in particular be considered for a small number of data points or if precise numbers are to be shown. For example if numbers need to be overlaid on graphics to aid readability and interpretation (for example, appending digits to the end of the bars in a barchart), one might consider omitting the graphic entirely and displaying the numbers as a table.\nTables have design elements just like graphics. Some of them are discussed in the following.\n\nLayout\nOne design element for tables is the layout, i.e., rows and columns. The layout should be chosen actively with the reader in mind. It is generally easier to compare numbers vertically than horizontally.\n\n\nDigits\nThe number of digits should be consistent within a table row or column (i.e., the same variable) but can differ across variables (e.g., if the table contains small and large numbers). Unnecessary precision should be avoided, a lower number of digits might facilitate reading and comparison.\n\n\nAlignment\nNumbers should be right-aligned to allow for easy identification of large and small numbers. In this way, large numbers literally stick out.\n\n\nMultiple numbers in table cells\nIf table cells contain more than a single value (e.g., means and confidence intervals), it should be considered if there is a better way to display the data for easy reading. Options include splitting the numbers into multiple table cells, rows, or columns, or reducing the font size for the less relevant numbers (e.g., means might be more important than confidence intervals).\n\n\nOrientation\nLandscape orientation is discouraged unless it cannot be avoided. Rotating a document in order to read a part of it is cumbersome for the reader, whether in print or on screen. Splitting a table into two might be a remedy to avoid landscape orientation – but one will need to consider whether splitting the table makes important comparisons more difficult to achieve.\n\n\nFonts and colours\nDifferent fonts and colours can be used if these serve a purpose, such as highlighting a particular value. Use of different fonts or colours for decorative purposes is discouraged."
  },
  {
    "objectID": "rss_conference.html",
    "href": "rss_conference.html",
    "title": "Join us at RSS Conference",
    "section": "",
    "text": "The authors of “Best Practices for Data Visualisation” are hosting a session at the RSS International Conference in Harrogate this September. Take part in this session to learn more about the guide and help contribute to its ongoing development.\n\n\n\n\n\nOur 80-minute session is divided into two halves:\nIn part 1, authors Andreas Krause, Nicola Rennie, and Brian Tarran will introduce the guide and its key recommendations, and there will be a short demo of how to use the new {RSSthemes} R package.\nIn part 2, attendees will be invited to share feedback with the authors, propose ideas, and start developing new and expanded sections of the guide. Attendees will be shown how to work with the guide’s source files and collaborate via GitHub. But to get the most out of the session, we recommend you work through these steps ahead of time:\n\nThis guide was created using Quarto, an open-source publishing system from Posit, the makers of RStudio. Follow the instructions to download and setup Quarto on your machine.\nTry out the Quarto demo using your coding or editing tool of choice.\nIf you don’t have one already, head over to GitHub.com and create a free GitHub account. Try out the GitHub demo for a basic introduction to creating repositories, forking repositories, pushing and pulling commits, and merging pull requests. The Turing Way also has a nice GitHub Intro for Beginners.\nOnce you’re feeling comfortable with GitHub, head on over to our GitHub repository. Click the “Fork” button to add a copy of the repository to your own GitHub account.\nNext, you’ll want to “clone” the repository to your local machine. The easiest way to do this is using GitHub Desktop.\nOnce the forked repository is on your local machine, you can start exploring the guide’s source code and files!\n\nReady to make a contribution? Come along to our RSS Conference session at 11:40 am on Tuesday, 5 September 2023 and share your ideas with other delegates.\nCan’t wait to get started? Check out our README file for further instructions."
  },
  {
    "objectID": "ts-and-cs.html",
    "href": "ts-and-cs.html",
    "title": "Terms and conditions",
    "section": "",
    "text": "Statements of fact and opinion published on this website are those of the respective authors and contributors and not necessarily those of the Royal Statistical Society (RSS).\nThe authors have prepared the content of this website responsibly and carefully. However, the authors and the RSS disclaim all warranties, express or implied, as to the accuracy of the information contained in any of the materials on this website or on other linked websites or on any subsequent links. This includes, but is not by way of limitation:\n\nany implied warranties of merchantability and fitness for a particular purpose.\nany liability for damage to your computer hardware, data, information, materials and business resulting from the information or the lack of information available.\nany errors, omissions, or inaccuracies in the information.\nany decision made or action taken or not taken in reliance upon the information.\n\nThe authors and the RSS make no warranty as to the content, accuracy, timeliness or completeness of the information or that the information may be relied upon for any reason and bear no responsibility for the accuracy, content or legality of any linked site or for that of any subsequent links. The authors and the RSS make no warranty that the website service will be uninterrupted or error-free or that any defects can be corrected.\nThe authors and the RSS shall not be liable for any losses or damages (including without limitation consequential loss or damage) whatsoever from the use of, or reliance on, the information in this website, or from the use of the internet generally. Links to other websites or the publication of advertisements do not constitute an endorsement or an approval by the authors and the RSS.\nThese disclaimers and exclusions shall be governed by and construed in accordance with the laws of England and Wales under the exclusive jurisdiction of the courts of England and Wales. Those who choose to access this site from outside the United Kingdom are responsible for compliance with local laws if and to the extent local laws are applicable.\nBy using this site, you agree to these terms and conditions of use."
  },
  {
    "objectID": "ts-and-cs.html#legal-disclaimer",
    "href": "ts-and-cs.html#legal-disclaimer",
    "title": "Terms and conditions",
    "section": "",
    "text": "Statements of fact and opinion published on this website are those of the respective authors and contributors and not necessarily those of the Royal Statistical Society (RSS).\nThe authors have prepared the content of this website responsibly and carefully. However, the authors and the RSS disclaim all warranties, express or implied, as to the accuracy of the information contained in any of the materials on this website or on other linked websites or on any subsequent links. This includes, but is not by way of limitation:\n\nany implied warranties of merchantability and fitness for a particular purpose.\nany liability for damage to your computer hardware, data, information, materials and business resulting from the information or the lack of information available.\nany errors, omissions, or inaccuracies in the information.\nany decision made or action taken or not taken in reliance upon the information.\n\nThe authors and the RSS make no warranty as to the content, accuracy, timeliness or completeness of the information or that the information may be relied upon for any reason and bear no responsibility for the accuracy, content or legality of any linked site or for that of any subsequent links. The authors and the RSS make no warranty that the website service will be uninterrupted or error-free or that any defects can be corrected.\nThe authors and the RSS shall not be liable for any losses or damages (including without limitation consequential loss or damage) whatsoever from the use of, or reliance on, the information in this website, or from the use of the internet generally. Links to other websites or the publication of advertisements do not constitute an endorsement or an approval by the authors and the RSS.\nThese disclaimers and exclusions shall be governed by and construed in accordance with the laws of England and Wales under the exclusive jurisdiction of the courts of England and Wales. Those who choose to access this site from outside the United Kingdom are responsible for compliance with local laws if and to the extent local laws are applicable.\nBy using this site, you agree to these terms and conditions of use."
  },
  {
    "objectID": "ts-and-cs.html#site-content",
    "href": "ts-and-cs.html#site-content",
    "title": "Terms and conditions",
    "section": "Site content",
    "text": "Site content\nThis guide is copyright © 2023 Andreas Krause, Nicola Rennie and the Royal Statistical Society. Unless otherwise stated, all copyright content in this guide is licensed under a Creative Commons Attribution 4.0 (CC BY 4.0) International licence, meaning it can be used and adapted for any purpose, provided attribution is given to the original authors.\nWe make every reasonable effort to locate, contact and acknowledge copyright owners and wish to be informed by any copyright owners who are not properly identified and acknowledged on this website so that we may make any necessary corrections."
  },
  {
    "objectID": "ts-and-cs.html#what-websites-do-we-link-to",
    "href": "ts-and-cs.html#what-websites-do-we-link-to",
    "title": "Terms and conditions",
    "section": "What websites do we link to?",
    "text": "What websites do we link to?\nAuthors and contributors recommend external web links on the basis of their suitability and usefulness for our users. Selection and addition of links to our website is entirely a matter for the authors and the authors alone.\nIt is not our policy to enter into agreements for reciprocal links.\nThe inclusion of a link to an organisation’s or individual’s website does not constitute an endorsement or an approval by the authors and the RSS of any product, service, policy or opinion of the organisation or individual. The authors and the RSS are not responsible for the content of external websites."
  },
  {
    "objectID": "ts-and-cs.html#what-websites-will-we-not-link-to",
    "href": "ts-and-cs.html#what-websites-will-we-not-link-to",
    "title": "Terms and conditions",
    "section": "What websites will we not link to?",
    "text": "What websites will we not link to?\nWe will not link to websites that contain racist, sexual or misleading content; that promote violence; that are in breach of any UK law; which are otherwise offensive to individuals or to groups of people.\nThe decision of the authors is final and no correspondence will be entered into.\nIf you wish to report a concern, please email b.tarran@rss.org.uk"
  },
  {
    "objectID": "ts-and-cs.html#software-and-services",
    "href": "ts-and-cs.html#software-and-services",
    "title": "Terms and conditions",
    "section": "Software and services",
    "text": "Software and services\nSource code and files for this site are available from GitHub. Use of our GitHub repository is governed by the Contributor Covenant Code of Conduct.\nThis site is built using Quarto, an open-source scientific and technical publishing system developed by Posit. Quarto source code and software licences are available from GitHub.\nThis site is hosted by GitHub Pages.\nThis site uses Google Analytics 4 for web analytics reporting."
  },
  {
    "objectID": "ts-and-cs.html#notice-and-takedown-policy",
    "href": "ts-and-cs.html#notice-and-takedown-policy",
    "title": "Terms and conditions",
    "section": "Notice and Takedown policy",
    "text": "Notice and Takedown policy\nIf you are a rights holder and are concerned that you have found material on our site for which you have not given permission, or is not covered by a limitation or exception in national law, please contact us in writing stating the following:\n\nYour contact details.\nThe full bibliographic details of the material.\nThe exact and full url where you found the material.\nProof that you are the rights holder and a statement that, under penalty of perjury, you are the rights holder or are an authorised representative.\n\nContact details:\nNotice and Takedown,\nLicensing,\n12 Errol Street,\nLondon EC1Y 8LX\nweb@rss.org.uk\nUpon receipt of notification, the ‘Notice and Takedown’ procedure is then invoked as follows:\n\nWe will acknowledge receipt of your complaint by email or letter and will make an initial assessment of the validity and plausibility of the complaint.\nUpon receipt of a valid complaint the material will be temporarily removed from our website pending an agreed solution.\nWe will contact the contributor who deposited the material, if relevant. The contributor will be notified that the material is subject to a complaint, under what allegations, and will be encouraged to assuage the complaints concerned.\nThe complainant and the contributor will be encouraged to resolve the issue swiftly and amicably and to the satisfaction of both parties, with the following possible outcomes:\n\nThe material is replaced on our website unchanged.\nThe material is replaced on our website with changes.\nThe material is permanently removed from our website.\n\n\nIf the contributor and the complainant are unable to agree a solution, the material will remain unavailable through the website until a time when a resolution has been reached."
  },
  {
    "objectID": "ts-and-cs.html#contributor-covenant-code-of-conduct",
    "href": "ts-and-cs.html#contributor-covenant-code-of-conduct",
    "title": "Terms and conditions",
    "section": "Contributor Covenant Code of Conduct",
    "text": "Contributor Covenant Code of Conduct\n\nOur pledge\nWe as members, contributors, and leaders pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, or sexual identity and orientation.\nWe pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community.\n\n\nOur standards\nExamples of behavior that contributes to a positive environment for our community include:\n\nDemonstrating empathy and kindness toward other people\nBeing respectful of differing opinions, viewpoints, and experiences\nGiving and gracefully accepting constructive feedback\nAccepting responsibility and apologizing to those affected by our mistakes, and learning from the experience\nFocusing on what is best not just for us as individuals, but for the overall community\n\nExamples of unacceptable behavior include:\n\nThe use of sexualized language or imagery, and sexual attention or advances of any kind\nTrolling, insulting or derogatory comments, and personal or political attacks\nPublic or private harassment\nPublishing others’ private information, such as a physical or email address, without their explicit permission\nOther conduct which could reasonably be considered inappropriate in a professional setting\n\n\n\nEnforcement responsibilities\nCommunity leaders are responsible for clarifying and enforcing our standards of acceptable behavior and will take appropriate and fair corrective action in response to any behavior that they deem inappropriate, threatening, offensive, or harmful.\nCommunity leaders have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, and will communicate reasons for moderation decisions when appropriate.\n\n\nScope\nThis Code of Conduct applies within all community spaces (encompassing this site and our GitHub repository). It also applies when an individual is officially representing the community in public spaces. Examples of representing our community include using an official e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event.\nNote that unless prior permission is agreed in writing with the RSS, only the lead authors (Andreas Krause, Nicola Rennie, and Brian Tarran) may officially represent the community. Comment to the media must only be given by appointed representatives and must be approved by the RSS press office.\n\n\nEnforcement\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported to the community leaders responsible for enforcement at b.tarran@rss.org.uk. All complaints will be reviewed and investigated promptly and fairly.\nAll community leaders are obligated to respect the privacy and security of the reporter of any incident.\n\n\nEnforcement guidelines\nCommunity leaders will follow these Community Impact Guidelines in determining the consequences for any action they deem in violation of this Code of Conduct:\n\n1. Correction\nCommunity Impact: Use of inappropriate language or other behavior deemed unprofessional or unwelcome in the community.\nConsequence: A private, written warning from community leaders, providing clarity around the nature of the violation and an explanation of why the behavior was inappropriate. A public apology may be requested.\n\n\n2. Warning\nCommunity Impact: A violation through a single incident or series of actions.\nConsequence: A warning with consequences for continued behavior. No interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, for a specified period of time. This includes avoiding interactions in community spaces as well as external channels like social media. Violating these terms may lead to a temporary or permanent ban.\n\n\n3. Temporary Ban\nCommunity Impact: A serious violation of community standards, including sustained inappropriate behavior.\nConsequence: A temporary ban from any sort of interaction or public communication with the community for a specified period of time. No public or private interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, is allowed during this period. Violating these terms may lead to a permanent ban.\n\n\n4. Permanent Ban\nCommunity Impact: Demonstrating a pattern of violation of community standards, including sustained inappropriate behavior, harassment of an individual, or aggression toward or disparagement of classes of individuals.\nConsequence: A permanent ban from any sort of public interaction within the community.\n\n\n\nAttribution\nThis Code of Conduct is adapted from the Contributor Covenant, version 2.1, available at https://www.contributor-covenant.org/version/2/1/code_of_conduct.html.\nCommunity Impact Guidelines were inspired by Mozilla’s code of conduct enforcement ladder.\nFor answers to common questions about this code of conduct, see the FAQ at https://www.contributor-covenant.org/faq. Translations are available at https://www.contributor-covenant.org/translations."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Best Practices for Data Visualisation",
    "section": "",
    "text": "Coming to the RSS Conference this September? Find out more about our conference session and how to become a guide contributor!\n\n\n\nStatistics is “the science of collecting, analyzing, presenting, and interpreting data” (Williams, Anderson, and Sweeney 2023). Presentation of data is a key means to support and guide interpretation and subsequent decision making. Techniques exist for effective display. This is what this guide is all about.\nGood data visualisation requires appreciation and careful consideration of the technical aspects of data presentation. But it also involves a creative element. Authorial choices are made about the “story” we want to tell, and design decisions are driven by the need to convey that story most effectively to our audience. Software systems use default settings for most graphical elements. However, each visualisation has its own story to tell, and so we must actively consider and choose settings for the visualisation under construction.\nThis guide covers both aspects of data visualisation: the art and the science. It is written primarily for contributors to Royal Statistical Society publications – chiefly, Significance magazine, the Journal of the Royal Statistical Society Series A, and Real World Data Science – but we trust you will find the information and advice within to be of broad relevance and use to any data visualisation task.\nThe overarching aim of this guide is to equip the reader with the fundamentals for creating data visualisations that are high quality, readable, effective at conveying information, accurate in display and interpretation, and fulfil their intended purpose. It begins with an overview of why we visualise data, and then discusses the core principles and elements of data visualisations – including the structure of charts and tables, and how those structures can be refined to aid readability. Concrete advice, examples, and code are presented to help improve the styling of charts, with a particular focus on accessibility. There’s a dedicated section on styling charts for RSS publications, and readers will also find links to resources for choosing the right type of chart for the data at hand.\nIn constructing this guide, the authors draw on many exceptional textbooks, papers, and other material created by experts in the field. References can be found throughout (they are also collected on a dedicated page, and readers are encouraged to seek out the original sources to deepen their understanding of, and appreciation for, the art and science of data visualisation.\n\n\n\n\nReferences\n\nWilliams, T. A., David R. Anderson, and Dennis J. Sweeney. 2023. “Statistics.” Encyclopedia Britannica. https://www.britannica.com/science/statistics."
  },
  {
    "objectID": "docs/tools.html",
    "href": "docs/tools.html",
    "title": "Styling charts for RSS publications",
    "section": "",
    "text": "In this section, we discuss the technical details of how to change the style of charts built with some of the most common types of software used to create data visualisations.\n\n\nR (R Core Team 2021) is a programming language which is popular for statistical computing and graphics. There are many packages with R that can be used to create data visualisations, and we don’t aim to cover them all here. Instead, we address the most common methods: built-in base R graphics, and the {ggplot2} package (Wickham 2016).\nTo help authors with styling their charts to fit in with the guidance in this document, we have developed an R package, {RSSthemes}. We include some examples of using the package here, but encourage readers to check the GitHub repository for any updates.\nYou can install the {RSSthemes} package from CRAN using:\n\ninstall.packages(\"RSSthemes\")\n\nYou can install the development version from GitHub (although we can’t promise it will be as stable as the CRAN version):\n\nremotes::install_github(\"nrennie/RSSthemes\")\n\nYou can then load the package using:\n\nlibrary(RSSthemes)\n\n\n\nR has built-in graphics capabilities that allow users to make a wide range of data visualisations without installing any additional packages. This blog post from Jumping Rivers (“Styling Base r Graphics” 2018) provides instructions on how to style graphics created in base R.\nExample: changing bar chart colours in base R.\nIf all of the bars, lines, points, etc. should have the same colour, you can set the col argument to have one of the RSS colours. The options are: signif_red, signif_blue, signif_green, signif_orange, or signif_yellow.\n\nbarplot(table(mtcars$gear), col = signif_blue)\n\n\n\n\nBar chart with bars coloured in Significance blue.\n\n\nIf the colours in your plot are based on values in your data, you can set the default colours using the palette() function. Within {RSSthemes}, the set_rss_palette() function changes the default colours used. There are currently three palettes available in {RSSthemes}, although we hope to add more in the future. The options are signif_qual, signif_div, or signif_seq.\n\nset_rss_palette(\"signif_qual\")\nplot(1:4, 1:4, col=1:4, pch=19, cex=3, xlab=\"\", ylab=\"\")\n\n\n\n\nScatter plot showing the colours from the signif_qual palette.\n\n\nRun palette(\"default\") to reset to original base R colours.\nExample: changing the styling of base R plots.\nWithin the plot() function (and related base R plotting functions such as barplot(), and hist()) , there are arguments to control how the non-data elements of the plot look. For example, the family argument changes which font family is used. You can also set many of these arguments globally by calling the par() function. Within {RSSthemes}, there is a function set_signif_par() which sets some default options, including the text alignment and font for all base R plots. We also recommend adding reference lines using the abline() function.\n\nset_signif_par()\nplot(1:4, 1:4, col=1:4, pch=19, cex=3, xlab=\"\", ylab=\"\",\n     main = \"My Significance Plot\",\n     sub = \"Source: data source\")\nabline(h=1:4, v=1:4, col = \"lightgrey\")\n\n\n\n\nScatter plot showing the base R styling implemented by set_signif_par().\n\n\n\n\n\n{ggplot2} is an R package within the {tidyverse} framework specifically for creating data visualisations. The package documentation provides guidance on how to create different types of charts. Advice on changing the colours and styles of {ggplot2} visualisations, can be found in the ggplot2: Elegant Graphics for Data Analysis book by Hadley Wickham (Wickham 2016).\nLet’s set up a basic data set to make some plots with {ggplot2}.\n\nlibrary(ggplot2)\nplot_df &lt;- data.frame(x = LETTERS[1:4],\n                      y = 1:4)\n\nExample: changing the non-mapped colours in {ggplot2}.\nIn {ggplot2}, the colour (or color) argument changes the colour that outlines an element, and fill changes the colour that fills the element. If all of the, e.g., bars, lines, or points should have the same colour, you can set either the fill or colour arguments to have one of the RSS colours. The options are: signif_red, signif_blue, signif_green, signif_orange, or signif_yellow.\n\nggplot(data = plot_df,\n       mapping = aes(x = x, y = y)) +\n  geom_col(fill = signif_yellow)\n\n\n\n\nBar chart with bars coloured yellow.\n\n\nExample: using a discrete colour scale in {ggplot2}.\nFor working with qualitative (discrete) data, the best palette to use is \"signif_qual\". This palette currently only contains four colours.\n\nDiscrete (fill) scale: scale_fill_rss_d()\n\n\nggplot(data = plot_df,\n       mapping = aes(x = x, y = y, fill = x)) +\n  geom_col() +\n  scale_fill_rss_d(palette = \"signif_qual\")\n\n\n\n\nBar chart with colours from signif_qual.\n\n\n\nDiscrete (colour) scale: scale_colour_rss_d()\n\n\nggplot(data = plot_df,\n       mapping = aes(x = x, y = y, colour = x)) +\n  geom_point(size = 4) +\n  scale_colour_rss_d(palette = \"signif_qual\")\n\n\n\n\nScatter plot with colours from signif_qual.\n\n\nExample: using a continuous colour scale in {ggplot2}.\nContinuous colour scales may be sequential or diverging. For working with sequential (continuous) data, the best palette to use is \"signif_seq\".\n\nContinuous (fill) scale: scale_fill_rss_c()\n\n\nggplot(data = plot_df,\n       mapping = aes(x = x, y = y, fill = y)) +\n  geom_col() +\n  scale_fill_rss_c(palette = \"signif_seq\")\n\n\n\n\nBar chart showing sequential green colour palette.\n\n\n\nContinuous (colour) scale: scale_colour_rss_c()\n\n\nggplot(data = plot_df,\n       mapping = aes(x = x, y = y, colour = y)) +\n  geom_point(size = 4) +\n  scale_colour_rss_c(palette = \"signif_seq\")\n\n\n\n\nScatter plot showing sequential green colour palette.\n\n\nFor working with diverging (continuous) data, the best palette to use is \"signif_div\".\n\nContinuous (fill) scale: scale_fill_rss_c()\n\n\nggplot(data = plot_df,\n       mapping = aes(x = x, y = y, fill = y)) +\n  geom_col() +\n  scale_fill_rss_c(palette = \"signif_div\")\n\n\n\n\nBar chart showing diverging red to blue palette.\n\n\nIf you want to centre the diverging scale around a different value, you can alternatively pass the pre-defined colours from {RSSthemes} into scale_fill_gradient2() in {ggplot2}:\n\nggplot(data = plot_df,\n       mapping = aes(x = x, y = y, fill = y)) +\n  geom_col() +\n  scale_fill_gradient2(low = signif_red, high = signif_blue, midpoint = 2)\n\n\n\n\nBar chart showing diverging red to blue palette centred at 2.\n\n\nExample: changing the theme in {ggplot2}.\nWithin {ggplot2}, themes allow you to control the appearance of the non-data elements of your plot. The default theme is theme_grey() which has a darker background. We recommend using a white or transparent background, such as those created with theme_minimal() or theme_bw().\nYou can also use theme_significance() from {RSSthemes} which additionally sets the plot font to one of those used in Significance magazine. Check that you have already run library(RSSthemes) to ensure the fonts load correctly.\n\nggplot(data = plot_df,\n       mapping = aes(x = x, y = y, fill = x)) +\n  geom_col() +\n  labs(title = \"My Significance Plot\",\n       subtitle = \"Some longer sentence explaining what is happening in the chart.\",\n       caption = \"Source: name of data source\") +\n  scale_fill_rss_d(palette = \"signif_qual\") +\n  theme_significance()\n\n\n\n\nBar chart styled with theme_significance().\n\n\nIf you find a bug in the {RSSthemes} package, or something that isn’t working quite as you expected, please submit a GitHub issue.\n\n\n\nThere are different ways to export and save images from R. Using the Export button on the Plots pane in RStudio doesn’t usually result in images of high enough resolution for publication quality graphics. The minimum image resolution for images published in print is 300 dpi. If you use ggsave() from {ggplot2}, 300 dpi is the default resolution. We recommend saving images in PDF or EPS file format as this makes it easier for them to be resized.\nFurther information on specific image sizes for different RSS publications is given in the Publication specifications section.\nAs an example, suppose you were creating a plot for the Features section of Significance magazine, and you wanted the plot to span two of the three columns. From the table below, the width of the image should be 124 mm. To use the pdf() function to save an image, the width and height should be in inches (124 mm ~ 4.88 in). If we want a 2:1 aspect ratio, we make the height equal to half the width:\n\npdf(file = \"significance-feature-plot.pdf\", # name of file\n    width = 4.88,                           # width of plot\n    height = 4.88 / 2                       # height of plot\n    ) \nplot(1:4, 1:4)\ndev.off()\n\n\n\n\n\nPython is a general-purpose programming language, with libraries available that provide capabilities for data analysis and visualisation.\nA work-in-progress Python package for implementing RSS colour palettes can be found at github.com/nrennie/RSSpythemes. If you’d like to contribute to this Python package development, please raise an issue or create a pull request on GitHub.\n\n\nMatplotlib is a Python library for creating static, animated, and interactive data visualisations.\nExample: changing bar chart colours in matplotlib.\nYou can change the colour of chart elements in matplotlib using the color argument:\n```{python}\n#| message: false\n#| eval: false\nimport matplotlib.pyplot as plt\n# generate data\nx_vals = ['A', 'B', 'C', 'D']\ny_vals = [1, 2, 3, 4]\n# create barchart\nplt.bar(x_vals, y_vals, color = \"#009cc4\")\nplt.show()\n```\n\n\n\nBar chart with bars coloured in Significance blue.\n\n\nIf the colours in your plot are based on values in your data, you can also change the colours used by providing a list of colours:\n```{python}\n#| message: false\n#| eval: false\n# define colour palette\nsignif_qual = ['#3fa535', '#f4c100', '#009cc4', '#f07d00']\n# create barchart\nplt.bar(x_vals, y_vals, label = x_vals, color = signif_qual)\nplt.show()\n```\n\n\n\nBar chart showing the colours from the signif_qual palette.\n\n\nExample: changing the font family in matplotlib.\nYou can change the font used in all elements of the plot using rcParams. Good practice when setting a custom font family is to add a generic font family (such as sans serif) as a back up. If you’re using a font that isn’t pre-installed on your system, you can load it in using font_manager:\n```{python}\n#| message: false\n#| eval: false\nfrom matplotlib import font_manager\nfont_manager.fontManager.addfont(\"SourceSans3-Regular.ttf\")\n```\nYou can specify a different font family, weight, or size using fontdic for individual elements.\n```{python}\n#| message: false\n#| eval: false\n# define fonts\nfrom matplotlib import rcParams\nrcParams['font.family'] = ['Source Sans 3', 'sans-serif']\n\n# create barchart\nfig, ax = plt.subplots(1, 1)\nplt.bar(x_vals, y_vals, color = signif_qual, label = x_vals)\nplt.title('My Significance Plot', fontdict = {'fontsize':14}, loc = 'left')\n# add grid lines lines\nax.set_axisbelow(True)\nax.xaxis.grid(color = 'lightgrey')\nax.yaxis.grid(color = 'lightgrey')\n# add legend below plot\nax.legend(ncol = 4, loc = 'lower center',\n          bbox_to_anchor = (0.5, -0.15), frameon = False)\nplt.show()\n```\n\n\n\nBarchart showing the use of Source Sans font.\n\n\n\n\n\n\nJulia is a general-purpose programming language, focused in high performance, while providing easy syntax. Julia has libraries available that provide capabilities for data analysis and visualisation.\n\n\nMakie is a high-level plotting library for the Julia programming language.\nExample: changing bar chart colours in Makie.\nYou can change the colour of chart elements in Makie using the color argument and custom tick labels using the xticks argument inside axis:\n```{julia}\n#| message: false\n#| eval: false\nusing CairoMakie\n# generate data\nx_vals = [1, 2, 3, 4]\ny_vals = [1, 2, 3, 4]\n# create barchart\nbarplot(x_vals, y_vals, color=\"#009cc4\", axis=(; xticks=(1:4, [\"A\", \"B\", \"C\", \"D\"])))\n```\n\n\n\nBar chart with bars coloured in Significance blue.\n\n\nIf the colours in your plot are based on values in your data, you can also change the colours used by providing a list of colours:\n```{julia}\n#| message: false\n#| eval: false\n# define colour palette\nsignif_qual = [\"#3fa535\", \"#f4c100\", \"#009cc4\", \"#f07d00\"]\n# create barchart\nbarplot(x_vals, y_vals, color=signif_qual, axis=(; xticks=(1:4, [\"A\", \"B\", \"C\", \"D\"])))\n```\n\n\n\nBar chart showing the colours from the signif_qual palette.\n\n\nYou can specify custom labels and titles using the axis argument:\n```{julia}\n#| message: false\n#| eval: false\n# define labels and title\ntitle = \"My Significance Plot\"\nsubtitle = \"Some longer sentence explaining what is happening in the chart.\"\nxlabel = \"X-axis label\"\nylabel = \"Y-axis label\"\n\n# create barchart\nbarplot(x_vals,\n        y_vals;\n        color=signif_qual,\n        axis=(;\n            xticks=(1:4, [\"A\", \"B\", \"C\", \"D\"]),\n            title=title,\n            subtitle=subtitle,\n            titlealign=:left,\n            xlabel=xlabel,\n            ylabel=ylabel,\n        ),\n)\n```\n\n\n\nBarchart showing the use of custom labels and titles."
  },
  {
    "objectID": "docs/tools.html#styling-charts-with-different-tools",
    "href": "docs/tools.html#styling-charts-with-different-tools",
    "title": "Styling charts for RSS publications",
    "section": "",
    "text": "In this section, we discuss the technical details of how to change the style of charts built with some of the most common types of software used to create data visualisations.\n\n\nR (R Core Team 2021) is a programming language which is popular for statistical computing and graphics. There are many packages with R that can be used to create data visualisations, and we don’t aim to cover them all here. Instead, we address the most common methods: built-in base R graphics, and the {ggplot2} package (Wickham 2016).\nTo help authors with styling their charts to fit in with the guidance in this document, we have developed an R package, {RSSthemes}. We include some examples of using the package here, but encourage readers to check the GitHub repository for any updates.\nYou can install the {RSSthemes} package from CRAN using:\n\ninstall.packages(\"RSSthemes\")\n\nYou can install the development version from GitHub (although we can’t promise it will be as stable as the CRAN version):\n\nremotes::install_github(\"nrennie/RSSthemes\")\n\nYou can then load the package using:\n\nlibrary(RSSthemes)\n\n\n\nR has built-in graphics capabilities that allow users to make a wide range of data visualisations without installing any additional packages. This blog post from Jumping Rivers (“Styling Base r Graphics” 2018) provides instructions on how to style graphics created in base R.\nExample: changing bar chart colours in base R.\nIf all of the bars, lines, points, etc. should have the same colour, you can set the col argument to have one of the RSS colours. The options are: signif_red, signif_blue, signif_green, signif_orange, or signif_yellow.\n\nbarplot(table(mtcars$gear), col = signif_blue)\n\n\n\n\nBar chart with bars coloured in Significance blue.\n\n\nIf the colours in your plot are based on values in your data, you can set the default colours using the palette() function. Within {RSSthemes}, the set_rss_palette() function changes the default colours used. There are currently three palettes available in {RSSthemes}, although we hope to add more in the future. The options are signif_qual, signif_div, or signif_seq.\n\nset_rss_palette(\"signif_qual\")\nplot(1:4, 1:4, col=1:4, pch=19, cex=3, xlab=\"\", ylab=\"\")\n\n\n\n\nScatter plot showing the colours from the signif_qual palette.\n\n\nRun palette(\"default\") to reset to original base R colours.\nExample: changing the styling of base R plots.\nWithin the plot() function (and related base R plotting functions such as barplot(), and hist()) , there are arguments to control how the non-data elements of the plot look. For example, the family argument changes which font family is used. You can also set many of these arguments globally by calling the par() function. Within {RSSthemes}, there is a function set_signif_par() which sets some default options, including the text alignment and font for all base R plots. We also recommend adding reference lines using the abline() function.\n\nset_signif_par()\nplot(1:4, 1:4, col=1:4, pch=19, cex=3, xlab=\"\", ylab=\"\",\n     main = \"My Significance Plot\",\n     sub = \"Source: data source\")\nabline(h=1:4, v=1:4, col = \"lightgrey\")\n\n\n\n\nScatter plot showing the base R styling implemented by set_signif_par().\n\n\n\n\n\n{ggplot2} is an R package within the {tidyverse} framework specifically for creating data visualisations. The package documentation provides guidance on how to create different types of charts. Advice on changing the colours and styles of {ggplot2} visualisations, can be found in the ggplot2: Elegant Graphics for Data Analysis book by Hadley Wickham (Wickham 2016).\nLet’s set up a basic data set to make some plots with {ggplot2}.\n\nlibrary(ggplot2)\nplot_df &lt;- data.frame(x = LETTERS[1:4],\n                      y = 1:4)\n\nExample: changing the non-mapped colours in {ggplot2}.\nIn {ggplot2}, the colour (or color) argument changes the colour that outlines an element, and fill changes the colour that fills the element. If all of the, e.g., bars, lines, or points should have the same colour, you can set either the fill or colour arguments to have one of the RSS colours. The options are: signif_red, signif_blue, signif_green, signif_orange, or signif_yellow.\n\nggplot(data = plot_df,\n       mapping = aes(x = x, y = y)) +\n  geom_col(fill = signif_yellow)\n\n\n\n\nBar chart with bars coloured yellow.\n\n\nExample: using a discrete colour scale in {ggplot2}.\nFor working with qualitative (discrete) data, the best palette to use is \"signif_qual\". This palette currently only contains four colours.\n\nDiscrete (fill) scale: scale_fill_rss_d()\n\n\nggplot(data = plot_df,\n       mapping = aes(x = x, y = y, fill = x)) +\n  geom_col() +\n  scale_fill_rss_d(palette = \"signif_qual\")\n\n\n\n\nBar chart with colours from signif_qual.\n\n\n\nDiscrete (colour) scale: scale_colour_rss_d()\n\n\nggplot(data = plot_df,\n       mapping = aes(x = x, y = y, colour = x)) +\n  geom_point(size = 4) +\n  scale_colour_rss_d(palette = \"signif_qual\")\n\n\n\n\nScatter plot with colours from signif_qual.\n\n\nExample: using a continuous colour scale in {ggplot2}.\nContinuous colour scales may be sequential or diverging. For working with sequential (continuous) data, the best palette to use is \"signif_seq\".\n\nContinuous (fill) scale: scale_fill_rss_c()\n\n\nggplot(data = plot_df,\n       mapping = aes(x = x, y = y, fill = y)) +\n  geom_col() +\n  scale_fill_rss_c(palette = \"signif_seq\")\n\n\n\n\nBar chart showing sequential green colour palette.\n\n\n\nContinuous (colour) scale: scale_colour_rss_c()\n\n\nggplot(data = plot_df,\n       mapping = aes(x = x, y = y, colour = y)) +\n  geom_point(size = 4) +\n  scale_colour_rss_c(palette = \"signif_seq\")\n\n\n\n\nScatter plot showing sequential green colour palette.\n\n\nFor working with diverging (continuous) data, the best palette to use is \"signif_div\".\n\nContinuous (fill) scale: scale_fill_rss_c()\n\n\nggplot(data = plot_df,\n       mapping = aes(x = x, y = y, fill = y)) +\n  geom_col() +\n  scale_fill_rss_c(palette = \"signif_div\")\n\n\n\n\nBar chart showing diverging red to blue palette.\n\n\nIf you want to centre the diverging scale around a different value, you can alternatively pass the pre-defined colours from {RSSthemes} into scale_fill_gradient2() in {ggplot2}:\n\nggplot(data = plot_df,\n       mapping = aes(x = x, y = y, fill = y)) +\n  geom_col() +\n  scale_fill_gradient2(low = signif_red, high = signif_blue, midpoint = 2)\n\n\n\n\nBar chart showing diverging red to blue palette centred at 2.\n\n\nExample: changing the theme in {ggplot2}.\nWithin {ggplot2}, themes allow you to control the appearance of the non-data elements of your plot. The default theme is theme_grey() which has a darker background. We recommend using a white or transparent background, such as those created with theme_minimal() or theme_bw().\nYou can also use theme_significance() from {RSSthemes} which additionally sets the plot font to one of those used in Significance magazine. Check that you have already run library(RSSthemes) to ensure the fonts load correctly.\n\nggplot(data = plot_df,\n       mapping = aes(x = x, y = y, fill = x)) +\n  geom_col() +\n  labs(title = \"My Significance Plot\",\n       subtitle = \"Some longer sentence explaining what is happening in the chart.\",\n       caption = \"Source: name of data source\") +\n  scale_fill_rss_d(palette = \"signif_qual\") +\n  theme_significance()\n\n\n\n\nBar chart styled with theme_significance().\n\n\nIf you find a bug in the {RSSthemes} package, or something that isn’t working quite as you expected, please submit a GitHub issue.\n\n\n\nThere are different ways to export and save images from R. Using the Export button on the Plots pane in RStudio doesn’t usually result in images of high enough resolution for publication quality graphics. The minimum image resolution for images published in print is 300 dpi. If you use ggsave() from {ggplot2}, 300 dpi is the default resolution. We recommend saving images in PDF or EPS file format as this makes it easier for them to be resized.\nFurther information on specific image sizes for different RSS publications is given in the Publication specifications section.\nAs an example, suppose you were creating a plot for the Features section of Significance magazine, and you wanted the plot to span two of the three columns. From the table below, the width of the image should be 124 mm. To use the pdf() function to save an image, the width and height should be in inches (124 mm ~ 4.88 in). If we want a 2:1 aspect ratio, we make the height equal to half the width:\n\npdf(file = \"significance-feature-plot.pdf\", # name of file\n    width = 4.88,                           # width of plot\n    height = 4.88 / 2                       # height of plot\n    ) \nplot(1:4, 1:4)\ndev.off()\n\n\n\n\n\nPython is a general-purpose programming language, with libraries available that provide capabilities for data analysis and visualisation.\nA work-in-progress Python package for implementing RSS colour palettes can be found at github.com/nrennie/RSSpythemes. If you’d like to contribute to this Python package development, please raise an issue or create a pull request on GitHub.\n\n\nMatplotlib is a Python library for creating static, animated, and interactive data visualisations.\nExample: changing bar chart colours in matplotlib.\nYou can change the colour of chart elements in matplotlib using the color argument:\n```{python}\n#| message: false\n#| eval: false\nimport matplotlib.pyplot as plt\n# generate data\nx_vals = ['A', 'B', 'C', 'D']\ny_vals = [1, 2, 3, 4]\n# create barchart\nplt.bar(x_vals, y_vals, color = \"#009cc4\")\nplt.show()\n```\n\n\n\nBar chart with bars coloured in Significance blue.\n\n\nIf the colours in your plot are based on values in your data, you can also change the colours used by providing a list of colours:\n```{python}\n#| message: false\n#| eval: false\n# define colour palette\nsignif_qual = ['#3fa535', '#f4c100', '#009cc4', '#f07d00']\n# create barchart\nplt.bar(x_vals, y_vals, label = x_vals, color = signif_qual)\nplt.show()\n```\n\n\n\nBar chart showing the colours from the signif_qual palette.\n\n\nExample: changing the font family in matplotlib.\nYou can change the font used in all elements of the plot using rcParams. Good practice when setting a custom font family is to add a generic font family (such as sans serif) as a back up. If you’re using a font that isn’t pre-installed on your system, you can load it in using font_manager:\n```{python}\n#| message: false\n#| eval: false\nfrom matplotlib import font_manager\nfont_manager.fontManager.addfont(\"SourceSans3-Regular.ttf\")\n```\nYou can specify a different font family, weight, or size using fontdic for individual elements.\n```{python}\n#| message: false\n#| eval: false\n# define fonts\nfrom matplotlib import rcParams\nrcParams['font.family'] = ['Source Sans 3', 'sans-serif']\n\n# create barchart\nfig, ax = plt.subplots(1, 1)\nplt.bar(x_vals, y_vals, color = signif_qual, label = x_vals)\nplt.title('My Significance Plot', fontdict = {'fontsize':14}, loc = 'left')\n# add grid lines lines\nax.set_axisbelow(True)\nax.xaxis.grid(color = 'lightgrey')\nax.yaxis.grid(color = 'lightgrey')\n# add legend below plot\nax.legend(ncol = 4, loc = 'lower center',\n          bbox_to_anchor = (0.5, -0.15), frameon = False)\nplt.show()\n```\n\n\n\nBarchart showing the use of Source Sans font.\n\n\n\n\n\n\nJulia is a general-purpose programming language, focused in high performance, while providing easy syntax. Julia has libraries available that provide capabilities for data analysis and visualisation.\n\n\nMakie is a high-level plotting library for the Julia programming language.\nExample: changing bar chart colours in Makie.\nYou can change the colour of chart elements in Makie using the color argument and custom tick labels using the xticks argument inside axis:\n```{julia}\n#| message: false\n#| eval: false\nusing CairoMakie\n# generate data\nx_vals = [1, 2, 3, 4]\ny_vals = [1, 2, 3, 4]\n# create barchart\nbarplot(x_vals, y_vals, color=\"#009cc4\", axis=(; xticks=(1:4, [\"A\", \"B\", \"C\", \"D\"])))\n```\n\n\n\nBar chart with bars coloured in Significance blue.\n\n\nIf the colours in your plot are based on values in your data, you can also change the colours used by providing a list of colours:\n```{julia}\n#| message: false\n#| eval: false\n# define colour palette\nsignif_qual = [\"#3fa535\", \"#f4c100\", \"#009cc4\", \"#f07d00\"]\n# create barchart\nbarplot(x_vals, y_vals, color=signif_qual, axis=(; xticks=(1:4, [\"A\", \"B\", \"C\", \"D\"])))\n```\n\n\n\nBar chart showing the colours from the signif_qual palette.\n\n\nYou can specify custom labels and titles using the axis argument:\n```{julia}\n#| message: false\n#| eval: false\n# define labels and title\ntitle = \"My Significance Plot\"\nsubtitle = \"Some longer sentence explaining what is happening in the chart.\"\nxlabel = \"X-axis label\"\nylabel = \"Y-axis label\"\n\n# create barchart\nbarplot(x_vals,\n        y_vals;\n        color=signif_qual,\n        axis=(;\n            xticks=(1:4, [\"A\", \"B\", \"C\", \"D\"]),\n            title=title,\n            subtitle=subtitle,\n            titlealign=:left,\n            xlabel=xlabel,\n            ylabel=ylabel,\n        ),\n)\n```\n\n\n\nBarchart showing the use of custom labels and titles."
  },
  {
    "objectID": "docs/tools.html#publication-specifications",
    "href": "docs/tools.html#publication-specifications",
    "title": "Styling charts for RSS publications",
    "section": "Publication specifications",
    "text": "Publication specifications\nThe following information should be used to design graphs and charts that meet RSS publication requirements. Details include page sizes and column widths, font types and sizes, and image resolutions and file formats.\n\nSignificance Magazine\n\n\n\nPage size\n(W) 212.55 mm x (H) 263.65 mm\n\n\nText area\n(W) 188 mm x (H) 212 mm\n\n\nImage resolution\n300 dpi (print quality)\n\n\nRecommended image file formats\njpeg, png\n\n\n\n\nNotebook section\nUses four-column layout.\n\n\n\n\n\n\n\n1x column width\n45 mm\n\n\n2x column width\n93 mm\n\n\n3x column width\n140 mm\n\n\n4x column width\n188 mm\n\n\nBody font\nMeta Serif OT, Book\n\n\nFont size\n8.5 pt\n\n\nSection colour\nRed:\n(in RSSthemes package use signif_red)\n\nCMYK = 0, 96, 98, 1\nRGB = 228, 27, 18\nHex code = #e41b12\n\n\n\n\n\n\nFeatures section\nUses three-column layout.\n\n\n\n\n\n\n\n1x column width\n60 mm\n\n\n2x column width\n124 mm\n\n\n3x column width\n188 mm\n\n\nBody font\nSource Sans Pro, Regular\n\n\nFont size\n9 pt\n\n\nSection colour\nGreen:\n(in RSSthemes package use signif_green)\n\nCMYK = 75, 5, 100, 0\nRGB = 63, 165, 53\nHex code = #3fa535\n\n\n\n\n\n\nProfiles / Perspectives / Statscom section\nUses three-column layout.\n\n\n\n\n\n\n\n1x column width\n60 mm\n\n\n2x column width\n124 mm\n\n\n3x column width\n188 mm\n\n\nBody font\nMeta Serif OT, Book\n\n\nFont size\n8.5 pt\n\n\nSection colours:\n\n\n\nProfiles\nBlue:\n(in RSSthemes package use signif_blue)\n\nCMYK = 78, 19, 15, 1\nRGB = 0, 156, 196\nHex code = #009cc4\n\n\n\nPerspectives\nYellow:\n(in RSSthemes package use signif_yellow)\n\nCMYK = 5, 24, 95, 1\nRGB = 244, 193, 0\nHex code = #f4c100\n\n\n\nStatscomm\nOrange:\n(in RSSthemes package use signif_orange)\n\nCMYK = 0, 60, 99, 0\nRGB = 240, 125, 0\nHex code = #f07d00\n\n\n\n\n\n\n\nJournal of the Royal Statistical Society Series A\nUses a single-column layout.\n\n\n\nPage size\n(W) 189 mm x (H) 246 mm\n\n\nText area\n(W) 136 mm x (H) 217 mm\n\n\nBody font\nSabon LT Std Roman\n\n\nFont size\n9.25 pt\n\n\nImage resolution\n300 dpi (print quality)\n\n\nRecommended image file formats\njpeg, png"
  },
  {
    "objectID": "docs/styling.html",
    "href": "docs/styling.html",
    "title": "Styling charts for accessibility",
    "section": "",
    "text": "The two charts below show the same data using the same type of chart – guinea pig tooth growth data visualised on a horizontal bar chart. However, the clarity of the two charts is distinctly different. The choice of colours, addition of text annotations, change of font size, and more informative labels make the chart on the right-hand side much easier to interpret. In this section, we’ll explore each of these elements in detail, and discuss how to style different elements of charts to improve accessibility and interpretability of your data visualisations.\n\n\nCode\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(ggtext)\nplot_data &lt;- ToothGrowth %&gt;%\n  mutate(dose = factor(dose)) %&gt;%\n  group_by(dose, supp) %&gt;%\n  summarise(len = mean(len)) %&gt;%\n  ungroup()\n\n# Unstyled plot\nggplot(\n  data = plot_data,\n  mapping = aes(x = len, y = dose, fill = supp)\n) +\n  geom_col(position = \"dodge\")\n\n# Styled plot\nggplot(\n  data = plot_data,\n  mapping = aes(x = len, y = dose, fill = supp)\n) +\n  geom_col(\n    position = position_dodge(width = 0.7),\n    width = 0.7\n  ) +\n  scale_x_continuous(\n    limits = c(0, 30),\n    name = \"Tooth length\"\n  ) +\n  geom_text(\n    mapping = aes(label = round(len, 0)),\n    position = position_dodge(width = 0.7),\n    hjust = 1.5,\n    size = 6,\n    fontface = \"bold\",\n    colour = \"white\"\n  ) +\n  scale_fill_manual(values = c(\"#9B1D20\", \"#3D5A80\")) +\n  labs(\n    title = \"Tooth Growth\",\n    subtitle = \"Each of 60 guinea pigs received one of three dose levels of\n       vitamin C (0.5, 1, and 2 mg/day) by one of two delivery methods:\n       &lt;span style='color: #9B1D20'&gt;**orange juice**&lt;/span&gt; or \n    &lt;span style='color: #3D5A80'&gt;**ascorbic acid**&lt;/span&gt;.\",\n    y = \"Dosage (mg/day)\"\n  ) +\n  theme_minimal(base_size = 14) +\n  theme(\n    legend.position = \"none\",\n    plot.title = element_textbox_simple(face = \"bold\"),\n    plot.subtitle = element_textbox_simple(\n      margin = margin(t = 10),\n      lineheight = 1.5\n    ),\n    plot.title.position = \"plot\",\n    plot.margin = margin(15, 10, 10, 15),\n    panel.grid = element_blank(),\n    axis.text.x = element_blank()\n  )\n\n\n\n\n\nBefore and after bar charts visualising tooth growth of guinea pigs."
  },
  {
    "objectID": "docs/styling.html#principles-of-styling-charts",
    "href": "docs/styling.html#principles-of-styling-charts",
    "title": "Styling charts for accessibility",
    "section": "",
    "text": "The two charts below show the same data using the same type of chart – guinea pig tooth growth data visualised on a horizontal bar chart. However, the clarity of the two charts is distinctly different. The choice of colours, addition of text annotations, change of font size, and more informative labels make the chart on the right-hand side much easier to interpret. In this section, we’ll explore each of these elements in detail, and discuss how to style different elements of charts to improve accessibility and interpretability of your data visualisations.\n\n\nCode\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(ggtext)\nplot_data &lt;- ToothGrowth %&gt;%\n  mutate(dose = factor(dose)) %&gt;%\n  group_by(dose, supp) %&gt;%\n  summarise(len = mean(len)) %&gt;%\n  ungroup()\n\n# Unstyled plot\nggplot(\n  data = plot_data,\n  mapping = aes(x = len, y = dose, fill = supp)\n) +\n  geom_col(position = \"dodge\")\n\n# Styled plot\nggplot(\n  data = plot_data,\n  mapping = aes(x = len, y = dose, fill = supp)\n) +\n  geom_col(\n    position = position_dodge(width = 0.7),\n    width = 0.7\n  ) +\n  scale_x_continuous(\n    limits = c(0, 30),\n    name = \"Tooth length\"\n  ) +\n  geom_text(\n    mapping = aes(label = round(len, 0)),\n    position = position_dodge(width = 0.7),\n    hjust = 1.5,\n    size = 6,\n    fontface = \"bold\",\n    colour = \"white\"\n  ) +\n  scale_fill_manual(values = c(\"#9B1D20\", \"#3D5A80\")) +\n  labs(\n    title = \"Tooth Growth\",\n    subtitle = \"Each of 60 guinea pigs received one of three dose levels of\n       vitamin C (0.5, 1, and 2 mg/day) by one of two delivery methods:\n       &lt;span style='color: #9B1D20'&gt;**orange juice**&lt;/span&gt; or \n    &lt;span style='color: #3D5A80'&gt;**ascorbic acid**&lt;/span&gt;.\",\n    y = \"Dosage (mg/day)\"\n  ) +\n  theme_minimal(base_size = 14) +\n  theme(\n    legend.position = \"none\",\n    plot.title = element_textbox_simple(face = \"bold\"),\n    plot.subtitle = element_textbox_simple(\n      margin = margin(t = 10),\n      lineheight = 1.5\n    ),\n    plot.title.position = \"plot\",\n    plot.margin = margin(15, 10, 10, 15),\n    panel.grid = element_blank(),\n    axis.text.x = element_blank()\n  )\n\n\n\n\n\nBefore and after bar charts visualising tooth growth of guinea pigs."
  },
  {
    "objectID": "docs/styling.html#colours",
    "href": "docs/styling.html#colours",
    "title": "Styling charts for accessibility",
    "section": "Colours",
    "text": "Colours\nColour choices can strongly impact the accessibility of your data visualisation. The correct use of colour can also help to emphasise the story you are trying to tell.\nBefore you get into choosing colours, ask yourself the question: do I really need to use colour here? Beecham et al. (2021) showed that the use of colour is one of the least effective methods for visually communicating differences between variables.\n\n\nCode\nlibrary(dplyr)\nlibrary(ggplot2)\nplot_data &lt;- mtcars %&gt;%\n  mutate(car = rownames(mtcars))\n\n# Colour all bars\nggplot(\n  data = plot_data,\n  mapping = aes(\n    y = reorder(car, disp),\n    x = disp,\n    fill = car\n  )\n) +\n  geom_col() +\n  labs(\n    x = \"Variable 1\",\n    y = \"\"\n  ) +\n  coord_cartesian(expand = FALSE) +\n  theme_minimal(base_size = 14) +\n  theme(\n    legend.position = \"none\",\n    legend.title = element_blank(),\n    plot.title = element_text(\n      face = \"bold\",\n      margin = margin(b = 10)\n    ),\n    plot.title.position = \"plot\",\n    plot.margin = margin(15, 10, 10, 15)\n  )\n\n# Highlight one bar\nggplot(\n  data = plot_data,\n  mapping = aes(\n    y = reorder(car, disp),\n    x = disp,\n    fill = (car == \"Maserati Bora\")\n  )\n) +\n  geom_col() +\n  scale_fill_manual(values = c(\"#AFE1AF\", \"#7a9d7a\")) +\n  labs(\n    x = \"Variable 1\",\n    y = \"\"\n  ) +\n  coord_cartesian(expand = FALSE) +\n  theme_minimal(base_size = 14) +\n  theme(\n    legend.position = \"none\",\n    legend.title = element_blank(),\n    plot.title = element_text(\n      face = \"bold\",\n      margin = margin(b = 10)\n    ),\n    plot.title.position = \"plot\",\n    plot.margin = margin(15, 10, 10, 15)\n  )\n\n\n\n\n\nBefore and after bar charts visualising car data showing colouring vs highlighting.\n\n\nIn the bar chart example above, rather than duplicating the information on the y-axis and colouring each bar a different colour, a better approach is to use colour to highlight a specific element of the data, e.g., a specific car, which focuses the reader’s attention straight to the point you are trying to make.\nIt’s useful not to rely on colour as the only factor which distinguishes data points in different groups. For example, in scatter plots, as well as colouring points in two groups either green or orange, the points could be encoded as circles and triangles.\n\n\nCode\nlibrary(readr)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)\nwheels &lt;- read_csv(\n  \"https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-08-09/wheels.csv\"\n  )\nplot_data &lt;- wheels %&gt;%\n  select(country, height, diameter) %&gt;%\n  drop_na() %&gt;%\n  filter(country %in% c(\"USA\", \"Japan\"))\n\n# Colour only\nggplot(\n  data = plot_data,\n  mapping = aes(\n    x = diameter,\n    y = height,\n    colour = country\n  )\n) +\n  geom_point(size = 3, alpha = 0.8) +\n  scale_x_continuous(limits = c(0, 800)) +\n  scale_y_continuous(limits = c(0, 800)) +\n  scale_colour_brewer(palette = \"Dark2\") +\n  coord_cartesian(expand = FALSE) +\n  labs(\n    title = \"Ferris wheels\",\n    x = \"Diameter (ft)\",\n    y = \"Height (ft)\"\n  ) +\n  theme_minimal(base_size = 14) +\n  theme(\n    legend.position = \"top\",\n    legend.title = element_blank(),\n    plot.title = element_text(\n      face = \"bold\",\n      margin = margin(b = 10)\n    ),\n    plot.title.position = \"plot\",\n    plot.margin = margin(15, 10, 10, 15)\n  )\n\n# Shapes and colours\nggplot(\n  data = plot_data,\n  mapping = aes(\n    x = diameter,\n    y = height,\n    colour = country,\n    shape = country\n  )\n) +\n  geom_point(size = 3, alpha = 0.8) +\n  scale_x_continuous(limits = c(0, 800)) +\n  scale_y_continuous(limits = c(0, 800)) +\n  scale_colour_brewer(palette = \"Dark2\") +\n  coord_cartesian(expand = FALSE) +\n  labs(\n    title = \"Ferris wheels\",\n    x = \"Diameter (ft)\",\n    y = \"Height (ft)\"\n  ) +\n  theme_minimal(base_size = 14) +\n  theme(\n    legend.position = \"top\",\n    legend.title = element_blank(),\n    plot.title = element_text(\n      face = \"bold\",\n      margin = margin(b = 10)\n    ),\n    plot.title.position = \"plot\",\n    plot.margin = margin(15, 10, 10, 15)\n  )\n\n\n\n\n\nBefore and after scatterplots visualising Ferris wheel data showing only dots, vs, dots and triangles to differentiate groups.\n\n\nDespite the difficulties that can arise from ineffective use, colour remains one of the most common methods for either distinguishing between categories, or showing changes in a value. If you decide to use colours, you then need to decide which colours to use.\n\nTypes of colour palette\nColour palettes generally fall into one of three categories, and the type of colour palette you choose should reflect the type of data you are visualising.\n\nSequential: used to visualise data that is ordered from low to high (or vice versa), e.g., temperature.\nDiverging: used to visualise data that is ordered and diverges from an important midpoint, e.g., days of above- or below-average temperature, in two directions.\nQualitative: used to visualise categorical data, where the magnitude of difference between, and ordering of, categories is not meaningful, e.g., distinct railway lines.\n\n\n\nCode\nlibrary(ggplot2)\nlibrary(PrettyCols)\n\n# Sequential\nggplot(\n  data = data.frame(x = 1:7, y = 1),\n  mapping = aes(x = x, y = y, fill = x)\n) +\n  geom_tile() +\n  labs(title = \"Sequential\") +\n  scale_fill_pretty_c(\"Teals\") +\n  theme_void() +\n  theme(\n    legend.position = \"none\",\n    plot.title = element_text(size = 20, face = \"bold\"),\n    plot.margin = margin(15, 10, 10, 15)\n  )\n\n# Diverging\nggplot(\n  data = data.frame(x = 1:7, y = 1),\n  mapping = aes(x = x, y = y, fill = x - mean(x))\n) +\n  geom_tile() +\n  labs(title = \"Diverging\") +\n  scale_fill_gradient2(low = \"#f1a340\", high = \"#998ec3\") +\n  theme_void() +\n  theme(\n    legend.position = \"none\",\n    plot.title = element_text(size = 20, face = \"bold\"),\n    plot.margin = margin(15, 10, 10, 15)\n  )\n\n# Qualitative\nggplot(\n  data = data.frame(x = 1:7, y = 1),\n  mapping = aes(x = x, y = y, fill = factor(x))\n) +\n  geom_tile() +\n  labs(title = \"Qualitative\") +\n  scale_fill_brewer(palette = \"Dark2\") +\n  theme_void() +\n  theme(\n    legend.position = \"none\",\n    plot.title = element_text(size = 20, face = \"bold\"),\n    plot.margin = margin(15, 10, 10, 15)\n  )\n\n\n\n\n\nDifferent types of colour palettes.\n\n\n\n\nAccessible colour palettes\nWhen choosing a particular colour palette, there are several important factors to consider.\nColours should be distinct from each other, for all readers. There are several different forms of colour blindness which can cause some colours to appear indistinguishable. The use of a colour blind checker (“Coblis — Color Blindness Simulator” n.d.) can show you what your plots may look like under different types of colour blindness. This is particularly important for diverging and qualitative palettes where the distinction between hues is used to tell apart different values. In contrast, sequential palettes often use luminosity to show how values change. Tennekes and Puts (2023) note that single hue palettes are a safer choice as they are typically more likely to be colourblind friendly. Tennekes and Puts (2023) also note that the larger the variability across luminosity and chroma (purity of colour), the likelier it is that the colours are more distinguishable by those with colour blindness. Paul Tol (2021) has some very useful resources on choices of colours, and several suggested palettes.\n\n\nCode\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(ggtext)\nlibrary(colourblindr)\nplot_data &lt;- ToothGrowth %&gt;%\n  mutate(dose = factor(dose)) %&gt;%\n  group_by(dose, supp) %&gt;%\n  summarise(len = mean(len)) %&gt;%\n  ungroup()\n\ng &lt;- ggplot(\n  data = plot_data,\n  mapping = aes(x = len, y = dose, fill = supp)\n) +\n  geom_col(\n    position = position_dodge(width = 0.7),\n    width = 0.7\n  ) +\n  scale_x_continuous(\n    limits = c(0, 30),\n    name = \"Tooth length\"\n  ) +\n  geom_text(\n    mapping = aes(label = round(len, 0)),\n    position = position_dodge(width = 0.7),\n    hjust = 1.5,\n    size = 6,\n    fontface = \"bold\",\n    colour = \"white\"\n  ) +\n  scale_fill_manual(values = c(\"#9B1D20\", \"#3D5A80\")) +\n  labs(\n    title = \"Tooth Growth\",\n    subtitle = \"Each of 60 guinea pigs received one of three dose levels of\n       vitamin C (0.5, 1, and 2 mg/day) by one of two delivery methods:\n       &lt;span style='color: #9B1D20'&gt;**orange juice**&lt;/span&gt; or \n    &lt;span style='color: #3D5A80'&gt;**ascorbic acid**&lt;/span&gt;.\",\n    y = \"Dosage (mg/day)\"\n  ) +\n  theme_minimal(base_size = 14) +\n  theme(\n    legend.position = \"none\",\n    plot.title = element_textbox_simple(face = \"bold\"),\n    plot.subtitle = element_textbox_simple(\n      margin = margin(t = 10),\n      lineheight = 1.5\n    ),\n    plot.title.position = \"plot\",\n    plot.margin = margin(15, 10, 10, 15),\n    panel.grid = element_blank(),\n    axis.text.x = element_blank()\n  )\n\ncvd_grid(g)\n\n\n\n\n\nThe simulated appearance of the same bar chart with different types of colour blindness.\n\n\nColours should appear distinct from each other when printed in black and white. Readers, or indeed academic journals, may choose to print your visualisations in monochrome. Colours that seem visually distinct that have similar luminosity (a measure of how light or dark a hue is) may appear indistinguishable when printed in black and white.\nColours should appropriately match your data. It’s important not to play into stereotypes, e.g., choosing pink and blue for data relating to women and men. Don’t confuse your readers by flipping common colour associations around, e.g., red for good and green for bad. Muth (2018) discusses the use of colour to display gender data, and many of the points can be extended to other types of data.\n\n\nChecklist\n\nMinimise the number of different colours used.\nCheck that your colours are colour blind friendly, and have sufficient contrast when viewed in monochrome.\nCheck that the type of colour palette matches the type of data visualised.\nUse non-colour elements to distinguish between different groups where possible.\nAvoid stereotypes and confusing associations with different colours."
  },
  {
    "objectID": "docs/styling.html#annotations",
    "href": "docs/styling.html#annotations",
    "title": "Styling charts for accessibility",
    "section": "Annotations",
    "text": "Annotations\nWhen talking about adding annotations to data visualisations, we simply mean adding text that adds a comment or clarification in order to help the reader understand the point made in the graphic. Annotations can be used to add details or explanation, highlight an interesting data point, or clarify how the chart should be interpreted. Although additional text can be extremely useful to a reader, it’s important not to overload a data visualisation with text as it can be distracting and make it more difficult to focus the point.\nA common use of annotation that enhances clarity of data visualisations is directly labelling data points on line graphs or bar charts. In line graphs, it’s common to label the value at the end of the line as it’s often far away from the y-axis labels (on the left by default). In bar charts, adding the values for each bar at, or near, the end of each bar also means readers don’t have to look up the values themselves. This can reduce the amount of eye movement required for readers to find the exact values and allows them to make better, more accurate comparisons. This isn’t always required if, for example, these values are additionally provided in a table.\n\n\nCode\nlibrary(ggplot2)\nlibrary(dplyr)\nplot_data &lt;- ToothGrowth %&gt;%\n  mutate(dose = factor(dose)) %&gt;%\n  group_by(dose, supp) %&gt;%\n  summarise(len = mean(len)) %&gt;%\n  ungroup()\n\n# Not annotated\nggplot(\n  data = plot_data,\n  mapping = aes(\n    x = len,\n    y = dose,\n    fill = supp\n  )\n) +\n  geom_col(\n    position = position_dodge(width = 0.7),\n    width = 0.7\n  ) +\n  scale_x_continuous(\n    limits = c(0, 30),\n    name = \"Tooth length\"\n  ) +\n  scale_fill_manual(\n    name = \"Supplement: \",\n    values = c(\"#9B1D20\", \"#3D5A80\")\n  ) +\n  labs(\n    title = \"Tooth Growth\",\n    y = \"Dose\"\n  ) +\n  theme_minimal(base_size = 14) +\n  theme(\n    legend.position = \"top\",\n    plot.title = element_text(face = \"bold\"),\n    plot.title.position = \"plot\",\n    plot.margin = margin(15, 10, 10, 15)\n  )\n\n# Annotated\nggplot(\n  data = plot_data,\n  mapping = aes(\n    x = len,\n    y = dose,\n    fill = supp\n  )\n) +\n  geom_col(\n    position = position_dodge(width = 0.7),\n    width = 0.7\n  ) +\n  scale_x_continuous(\n    limits = c(0, 30),\n    name = \"Tooth length\"\n  ) +\n  geom_text(\n    mapping = aes(label = round(len, 0)),\n    position = position_dodge(width = 0.7),\n    hjust = 1.5,\n    size = 6,\n    fontface = \"bold\",\n    colour = \"white\"\n  ) +\n  scale_fill_manual(\n    name = \"Supplement: \",\n    values = c(\"#9B1D20\", \"#3D5A80\")\n  ) +\n  labs(\n    title = \"Tooth Growth\",\n    y = \"Dose\"\n  ) +\n  theme_minimal(base_size = 14) +\n  theme(\n    legend.position = \"top\",\n    plot.title = element_text(face = \"bold\"),\n    plot.title.position = \"plot\",\n    plot.margin = margin(15, 10, 10, 15)\n  )\n\n\n\n\n\nBefore and after adding annotations to label a bar chart.\n\n\nThe placement of annotations is also key:\n\nIn a scatter plot, directly labelling every data point isn’t usually an option as there are too many points to label without clutter. Instead, you may choose to highlight only one or two interesting points, such as outliers.\nWhen adding more extensive text to explain an outlier or point of interest, place the text in a relevant position. For example, if you’re annotating a line chart to explain a decrease in value in 2008, position the text near to 2008.\nDon’t fill every white space with text. “Chart Titles and Text” (n.d.) recommends a maximum of 3 or 4 annotations per chart to avoid overwhelming readers. This also means keeping annotations brief and to the point. This is especially true for data visualisations that accompany journal publications or magazine articles where further textual explanation is likely included already.\n\n\nChecklist\n\nCheck if there are outliers that need further explanation, or values that could be directly labelled.\nLabels are positioned sensibly, and the data visualisation does not feel crowded with text.\nMake sure there is sufficient contrast between the text and the background."
  },
  {
    "objectID": "docs/styling.html#fonts",
    "href": "docs/styling.html#fonts",
    "title": "Styling charts for accessibility",
    "section": "Fonts",
    "text": "Fonts\nFont choice is a key component of making your data visualisations easy to understand. Some fonts are easier to read than others, and this is particularly true for those with visual impairments, or a learning disability such as dyslexia. A poor choice of font may make your visualisation inaccessible to a significant number of people in your audience.\nTry to minimise the number of different types of font you use: use a fixed set of sizes, a maximum of two different font families, and minimise the use of mixing font faces. This all helps to reduce unnecessary work from a reader when they look at your visualisation. Previous advice relating to choice of colour is also relevant here - it’s particularly important to check there is sufficient contrast between the background colour and the text colour.\n\nFont size\nLarger fonts are easier to read. It’s generally recommended that font size is at least 12pt for printed materials or websites. If you’re creating a presentation, fonts should be at least 36pt to make sure they’re visible to people nearer the back of the room.\n\n\nFont family\nSo what makes a good choice of font family? There are three main types of font:\n\nSerif: serifs are the small strokes on the ends of some longer strokes that occur in some fonts. Fonts that have these serifs are called serif fonts.\nSans serif: Fonts without serifs are called sans serif fonts.\nMonospace: monospace fonts are those whose characters each take up an equal width.\n\nThere is no consensus as to which type of font (serif, sans serif, or monospace) is more accessible. The simpler characters of sans serif fonts may increase readability for visually impaired readers, while those with dyslexia may find the characters more difficult to tell apart. Serif fonts (such as Times New Roman) can be more difficult to read as the decorative lines distract from the shape of the letter. This is especially true in digital publications where on-screen pixelation can further distort the letters. We’d recommend avoiding serif fonts for any text in images that will appear online. Common sans serif fonts such as Arial, Calibri, and Verdana are often considered to be accessible.\nDyslexie and OpenDyslexic are fonts specifically designed to aid readability for those with dyslexia, as they increase font weight at the bottom of the letters which reduces how much the letters appear to move around. Atkinson Hyperlegible is a font developed by the Braille Institute of America, which is designed to maximise distinction between different characters for low vision readers. It’s freely available, and can be downloaded from the Braille Institute or used through Google Fonts. There is conflicting evidence about whether or not specially designed fonts are actually more accessible Wery and Diliberto (2017). Therefore, sticking with a sans serif font is likely a safer choice.\nSome fonts, particularly sans serif fonts, have characters which appear very similar to other characters. For example, a capital I, lowercase l, and number 1, can sometimes be indistinguishable. Choose a font face with a distinguishable feature for each letter and number. Source Sans Pro and Verdana both meet this condition.\n\n\nFont face\nFont faces, e.g., bold or italic effects, can be used to emphasise particular parts of text. For example, a plot annotation may highlight a specific value placed in amongst some explanatory text. Italicised text is generally considered more difficult to read (Rello and Baeza-Yates 2016), as is capitalised text when used for the purpose of emphasis. Instead, use bold text to highlight (sparingly!).\n\n\nChecklist\nAs you can see, there is no single font recommendation that will ensure your visualisation is accessible to all. However, there are some things you can do to improve accessibility.\n\nEnsure the font size is at least 12 pt.\nEnsure that a capital I, lowercase l, and number 1 are distinguishable.\nMinimise the number of different fonts used (no more than two).\nMinimise the use of italics and uppercase text, and instead use (sparingly) bold text for emphasis."
  },
  {
    "objectID": "docs/styling.html#alt-text",
    "href": "docs/styling.html#alt-text",
    "title": "Styling charts for accessibility",
    "section": "Alt Text",
    "text": "Alt Text\nAlt text (short for alternative text) is text that describes the visual aspects and purpose of an image – including charts. Though alt text has various uses, its primary purpose is to aid visually impaired users in interpreting images when the alt text is read aloud by screen readers.\nIn Green (2023), Mine Dogucu discusses the importance of adding alt text to your data visualisations, to ensure those who are blind or visually impaired don’t miss out on the content in your charts. Cesal (2020) provides a simple structure to aid you in writing alt text for data visualisations."
  },
  {
    "objectID": "docs/choosing.html",
    "href": "docs/choosing.html",
    "title": "Choosing a visualisation type",
    "section": "",
    "text": "The process of deciding what type of data visualisation to create begins with a simple question: Why am I doing this? Data visualisations must serve a purpose so all decisions about chart type, design, layout, and more, should flow from a clear understanding of the intended purpose of a graphic.\nChristian Hennig, a statistics professor at the University of Bologna, suggests working through the following questions:\n\n\nIs the aim of the graph to find something out (“analysis graph”), or to make a point to others?\nWhat do you want to find out?\nWho is the audience for the graph? (It may be yourself.)\n\n\nIdentifying the target audience at an early stage is crucial, as different groups of people are likely to have different levels of graph literacy depending on their education level, technical expertise, prior exposure to data visualisation formats, and other factors. Design decisions that do not properly account for the needs of the intended audience will fail to achieve their aims.\n\n\nBefore any design decisions are made:\n\nBe clear about the intended purpose of a data visualisation.\nUnderstand your target audience, including their needs and familiarity with different visualisation types."
  },
  {
    "objectID": "docs/choosing.html#goals-and-audience",
    "href": "docs/choosing.html#goals-and-audience",
    "title": "Choosing a visualisation type",
    "section": "",
    "text": "The process of deciding what type of data visualisation to create begins with a simple question: Why am I doing this? Data visualisations must serve a purpose so all decisions about chart type, design, layout, and more, should flow from a clear understanding of the intended purpose of a graphic.\nChristian Hennig, a statistics professor at the University of Bologna, suggests working through the following questions:\n\n\nIs the aim of the graph to find something out (“analysis graph”), or to make a point to others?\nWhat do you want to find out?\nWho is the audience for the graph? (It may be yourself.)\n\n\nIdentifying the target audience at an early stage is crucial, as different groups of people are likely to have different levels of graph literacy depending on their education level, technical expertise, prior exposure to data visualisation formats, and other factors. Design decisions that do not properly account for the needs of the intended audience will fail to achieve their aims.\n\n\nBefore any design decisions are made:\n\nBe clear about the intended purpose of a data visualisation.\nUnderstand your target audience, including their needs and familiarity with different visualisation types."
  },
  {
    "objectID": "docs/choosing.html#data",
    "href": "docs/choosing.html#data",
    "title": "Choosing a visualisation type",
    "section": "Data",
    "text": "Data\nSoftware tools generally allow users the flexibility to visualise data in whatever format they choose. However, decisions about chart type must be informed either by the kind of data at hand or the data relationship that is of interest. Format choice must then be further guided by audience needs, as previously discussed.\nThere are a range of online tools to help decide on a visualisation type. We recommend the following:\n\nType\nFrom Data to Viz presents users with a series of decision trees, each leading to different recommended chart formats depending on the type of data selected (numeric, categoric, etc.).\n\n\n\nScreenshot of From Data to Viz.\n\n\n\n\nRelationship\nVisual Vocabulary is a site developed by the data visualisation team at the Financial Times. It allows users to narrow down the choice of chart type based on the data relationship that is “most important in your story”. Relationship options include deviation, correlation, change versus time, ranking, and more.\n\n\n\nScreenshot of Visual Vocabulary.\n\n\n\n\nChecklist\n\nChoose a chart type based on either data type or data relationship.\nWhen selecting from a range of suitable chart types, keep in mind the needs of the target audience and their likely levels of graph literacy.\n\n\n\n\n\n\n\nNote\n\n\n\nFurther general guidance is provided by Few’s Show Me the Numbers (Few 2004) and Robbins’ Creating Better Graphs (Robbins 2006)."
  },
  {
    "objectID": "howto.html",
    "href": "howto.html",
    "title": "How to use this guide",
    "section": "",
    "text": "We designed this guide to be read from beginning to end, so that each section builds on the foundations of those that came before. If this is your first time reading the guide, we would encourage you to read it in this way. However, those looking for guidance on specific aspects of data visualisation can make use of the search and navigation functions of this website.\nIf you would prefer to read offline, you can download the guide as a PDF. Individual sections of the guide can also be downloaded as separate PDFs using the “Other Formats &gt; PDF” option when shown in the right-hand navigation menu.\nThroughout the text you will find examples of charts and graphs. For many of these, we provide code in R to allow you to reproduce the visualisations, and we encourage you to do so and to adapt the code for your own purposes."
  },
  {
    "objectID": "howto.html#how-to-contribute-to-this-guide",
    "href": "howto.html#how-to-contribute-to-this-guide",
    "title": "How to use this guide",
    "section": "How to contribute to this guide",
    "text": "How to contribute to this guide\n\nTo make a suggestion or ask a question\nPlease open up a discussion in our GitHub repository’s Discussions section.\n\n\nIf you spot a bug or an error\nPlease either:\n\nRaise an issue in our GitHub repository’s Issues section. You can do this using one of the ‘Report an issue’ links on our website; or\nFork our repository, edit the relevant file(s), and make a pull request against the main branch of our repository. You can do this using one of the ‘Edit this page’ links on our website.\n\n\n\nIf you want to add a new feature or section to the guide\n\nRaise an issue in our GitHub repository’s Issues section, tag it as an ‘enhancement’ and describe your proposed contribution.\nFork the repository and create a new branch named, e.g., my-new-feature-or-section.\nAdd content, code and files to your branch.\nMake a pull request against the main branch of our repository.\n\nFurther information about the contribution process can be found in our repository’s README file."
  },
  {
    "objectID": "howto.html#how-to-engage-with-other-users-of-this-guide",
    "href": "howto.html#how-to-engage-with-other-users-of-this-guide",
    "title": "How to use this guide",
    "section": "How to engage with other users of this guide",
    "text": "How to engage with other users of this guide\nReaders are encouraged to make full use of our GitHub repository’s Discussions section. Please note that use of, and all contributions to, our website and repository are governed by our Code of Conduct."
  },
  {
    "objectID": "howto.html#copyright-re-use-distribution-and-disclaimer",
    "href": "howto.html#copyright-re-use-distribution-and-disclaimer",
    "title": "How to use this guide",
    "section": "Copyright, re-use, distribution, and disclaimer",
    "text": "Copyright, re-use, distribution, and disclaimer\nThis guide is copyright © 2023 Andreas Krause, Nicola Rennie and the Royal Statistical Society. Content created by the lead authors (Andreas Krause, Nicola Rennie, and Brian Tarran) and published in this guide is licensed under a Creative Commons Attribution 4.0 (CC BY 4.0) International licence, meaning it can be used and adapted for any purpose, provided attribution is given to the original authors. By contributing to this guide, contributors agree to licence their own work under the same terms.\n\nHow to cite: Krause, Andreas, Nicola Rennie and Brian Tarran. 2023. “Best Practices for Data Visualisation.” Royal Statistical Society, July 2023. https://royal-statistical-society.github.io/datavisguide/.\n\nStatements of fact and opinion published on this website are those of the respective authors and contributors and not necessarily those of the Royal Statistical Society (RSS).\nThe authors have prepared the content of this website responsibly and carefully. However, the authors and the RSS disclaim all warranties, express or implied, as to the accuracy of the information contained in any of the materials on this website or on other linked websites or on any subsequent links. See the full terms and conditions."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About the authors",
    "section": "",
    "text": "Andreas Krause holds a PhD and an MSc in statistics and computer science. His current position is senior director, data science, modeling and simulation, at Idorsia Pharmaceuticals Ltd in Basel, Switzerland. His group provides clinical drug development teams with statistics and model-based analysis and predictions to support decision making. His works include more than 100 peer-reviewed scientific publications.\nAndreas’ scientific activities include positions as co-editor of the American Statistical Association’s section on Statistical Computing and Graphics, book review editor and board member of Computational Statistics, associate editor and editor-in-chief of Pharmaceutical Statistics, and, currently, advisory board member of Pharmaceutical Statistics and the Journal of Pharmacokinetics and Pharmacodynamics.\nAndreas started using the S language in 1987, became European S-PLUS distributor and supporter in 1988, and started using R in the 1990s. He is author of The Basics of S and S-Plus (Springer, 4 editions, more than 20,000 copies sold) and editor of A picture is worth a thousand tables: graphics in life sciences (Springer, 2012).\nGraphics and visualisation are long-standing topics for him, including numerous presentations and workshops on “Graphics of clinical data: the good, the bad, and the ugly” at various conferences and seminars.\n\nLinkedIn: linkedin.com/in/andreaskrause\nORCID: orcid.org/0000-0002-4686-976X"
  },
  {
    "objectID": "about.html#andreas-krause",
    "href": "about.html#andreas-krause",
    "title": "About the authors",
    "section": "",
    "text": "Andreas Krause holds a PhD and an MSc in statistics and computer science. His current position is senior director, data science, modeling and simulation, at Idorsia Pharmaceuticals Ltd in Basel, Switzerland. His group provides clinical drug development teams with statistics and model-based analysis and predictions to support decision making. His works include more than 100 peer-reviewed scientific publications.\nAndreas’ scientific activities include positions as co-editor of the American Statistical Association’s section on Statistical Computing and Graphics, book review editor and board member of Computational Statistics, associate editor and editor-in-chief of Pharmaceutical Statistics, and, currently, advisory board member of Pharmaceutical Statistics and the Journal of Pharmacokinetics and Pharmacodynamics.\nAndreas started using the S language in 1987, became European S-PLUS distributor and supporter in 1988, and started using R in the 1990s. He is author of The Basics of S and S-Plus (Springer, 4 editions, more than 20,000 copies sold) and editor of A picture is worth a thousand tables: graphics in life sciences (Springer, 2012).\nGraphics and visualisation are long-standing topics for him, including numerous presentations and workshops on “Graphics of clinical data: the good, the bad, and the ugly” at various conferences and seminars.\n\nLinkedIn: linkedin.com/in/andreaskrause\nORCID: orcid.org/0000-0002-4686-976X"
  },
  {
    "objectID": "about.html#nicola-rennie",
    "href": "about.html#nicola-rennie",
    "title": "About the authors",
    "section": "Nicola Rennie",
    "text": "Nicola Rennie\n\n\nNicola Rennie is an academic, data scientist, and educator with a passion for effectively communicating data. She is a Lecturer in Health Data Science at Lancaster Medical School, where her research focuses on the use of statistical models to improve health outcomes. Her teaching experience covers topics including data visualisation, programming in R and Python, and how to effectively communicate the results of statistical analyses. Nicola is the author and maintainer of multiple R packages, and an active member of the R community – regularly presenting at R User Group Meetups and mentoring new members of the community.\n\nWebsite: nrennie.rbind.io\nTwitter: @nrennie35\nLinkedIn: linkedin.com/in/nicola-rennie\nMastodon: @fosstodon.org/@nrennie\nORCID: orcid.org/0000-0003-4797-557X"
  },
  {
    "objectID": "about.html#brian-tarran",
    "href": "about.html#brian-tarran",
    "title": "About the authors",
    "section": "Brian Tarran",
    "text": "Brian Tarran\n\n\nBrian Tarran is a writer and editor with 20 years of experience covering the research and data space. He has worked for the Royal Statistical Society (RSS) for the past 8 years, and was editor of Significance Magazine (a joint publication of the RSS, the American Statistical Association and the Statistical Society of Australia) prior to the launch of Real World Data Science. Brian is a former editor of Research-Live.com and was launch editor of Impact magazine, both published by the Market Research Society.\n\nTwitter: @brtarran\nLinkedIn: linkedin.com/in/brian-tarran-58b0261\nMastodon: @mastodon.social/@brtarran\nGitHub: github.com/brtarran"
  },
  {
    "objectID": "about.html#contributors",
    "href": "about.html#contributors",
    "title": "About the authors",
    "section": "Contributors",
    "text": "Contributors\n\nJose Storopoli added Julia examples to Styling for RSS publications."
  },
  {
    "objectID": "about.html#acknowledgements",
    "href": "about.html#acknowledgements",
    "title": "About the authors",
    "section": "Acknowledgements",
    "text": "Acknowledgements\nThanks to Kelly Zou, Marco Geraci, Jordi Prats-Rodriguez, Marc Vandemeulebroecke, and Peter Bonate for comments on an early version of this guide. Thanks also to:\n\nPhilip Shirk for styling fixes.\nBrent Riechelman for bug hunting.\nMMJansen for spotting an error."
  }
]